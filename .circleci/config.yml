version: 2.1

orbs:
  gh: circleci/github-cli@2.4.0

commands:
  setup-audius-ctl:
    description: Checkout and install audius-ctl built in previous job
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Uninstall any existing audius-ctl binary
          command: |
            make uninstall
      - run:
          name: Install audius-ctl
          command: |
            make install
      - run:
          name: 'Install self-signed ssl certificate for devnet.audius-d'
          command: |
            sudo cp dev-tools/tls/devnet-cert.pem /usr/local/share/ca-certificates/devnet.audius-d.crt
            sudo update-ca-certificates
  docker-login:
    steps:
      - run:
          name: Docker login
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  docker-logout:
    steps:
      - run:
          when: always
          name: Log out of Docker
          command: docker logout
  install-crane:
    steps:
      - run:
          name: Install Crane
          command: |
            VERSION=v0.20.2
            OS=Linux
            ARCH=x86_64
            curl -sL "https://github.com/google/go-containerregistry/releases/download/${VERSION}/go-containerregistry_${OS}_${ARCH}.tar.gz" > go-containerregistry.tar.gz
            tar -zxvf go-containerregistry.tar.gz -C $HOME/bin/ crane


jobs:
  build-audiusd-bin:
    docker:
      - image: cimg/go:1.23
    resource_class: xlarge
    environment:
      GOCACHE: /home/circleci/.cache/go-build
      GOMODCACHE: /home/circleci/go/pkg/mod
      GOMAXPROCS: "8"
      GOFLAGS: "-trimpath -mod=readonly -p=8"
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
            - go-mod-v1-
            - go-build-v1-{{ .Branch }}-{{ checksum "go.sum" }}
            - go-build-v1-{{ .Branch }}
      - run:
          name: Download Go modules
          command: go mod download
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/go/pkg/mod
      - run:
          name: Build audiusd binaries
          command: |
            GOOS=linux GOARCH=amd64 go build -o bin/audiusd-amd64 ./cmd/audiusd
            GOOS=linux GOARCH=arm64 go build -o bin/audiusd-arm64 ./cmd/audiusd
      - save_cache:
          key: go-build-v1-{{ .Branch }}-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/.cache/go-build
      - persist_to_workspace:
          root: ./
          paths:
            - bin/audiusd-*

  build-audiusd-amd64:
    machine: true
    resource_class: audiusproject/gcp-n2-standard-4
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - docker-login
      - run:
          name: Build and push AMD64 Docker images
          command: |
            DOCKER_DEFAULT_PLATFORM=linux/amd64 docker build \
              --target prod \
              --build-arg GIT_SHA=${CIRCLE_SHA1} \
              --build-arg PREBUILT_BINARY=bin/audiusd-amd64 \
              -t audius/audiusd:${CIRCLE_SHA1}-amd64 \
              -f ./cmd/audiusd/Dockerfile.ci ./
            docker push audius/audiusd:${CIRCLE_SHA1}-amd64
            
            DOCKER_DEFAULT_PLATFORM=linux/amd64 docker build \
              --target test \
              --build-arg GIT_SHA=${CIRCLE_SHA1} \
              --build-arg PREBUILT_BINARY=bin/audiusd-amd64 \
              -t audius/audiusd:${CIRCLE_SHA1}-test \
              -f ./cmd/audiusd/Dockerfile.ci ./
            docker push audius/audiusd:${CIRCLE_SHA1}-test

  build-audiusd-arm64:
    machine: true
    resource_class: arm.medium
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - docker-login
      - run:
          name: Build and push ARM64 Docker image
          command: |
            DOCKER_DEFAULT_PLATFORM=linux/arm64 docker build \
              --build-arg GIT_SHA=${CIRCLE_SHA1} \
              --build-arg PREBUILT_BINARY=bin/audiusd-arm64 \
              -t audius/audiusd:${CIRCLE_SHA1}-arm64 \
              -f ./cmd/audiusd/Dockerfile.ci ./
            docker push audius/audiusd:${CIRCLE_SHA1}-arm64

  test-audiusd:
    machine: true
    resource_class: audiusproject/gcp-n2-standard-4
    steps:
      - checkout
      - run:
          name: Pull images
          command: |
            docker pull audius/audiusd:${CIRCLE_SHA1}-amd64
            docker pull audius/audiusd:${CIRCLE_SHA1}-test
      - run:
          name: Run mediorum tests
          command: |
            AUDIUSD_IMAGE=audius/audiusd:${CIRCLE_SHA1}-amd64 \
            TEST_IMAGE=audius/audiusd:${CIRCLE_SHA1}-test \
            make mediorum-test
      - run:
          name: Run core tests
          command: |
            AUDIUSD_IMAGE=audius/audiusd:${CIRCLE_SHA1}-amd64 \
            TEST_IMAGE=audius/audiusd:${CIRCLE_SHA1}-test \
            make core-test

  push-audiusd-manifest:
    docker:
      - image: cimg/base:current
    steps:
      - docker-login
      - run:
          name: Create manifest
          command: |
            docker manifest create audius/audiusd:${CIRCLE_SHA1} \
              audius/audiusd:${CIRCLE_SHA1}-amd64 \
              audius/audiusd:${CIRCLE_SHA1}-arm64
            docker manifest push audius/audiusd:${CIRCLE_SHA1}
      - docker-logout

  deploy-audiusd-staging:
    docker:
      - image: cimg/base:2023.01
    resource_class: small
    steps:
      - docker-login
      - install-crane
      - run:
          name: Release audiusd to staging
          command: |
            crane copy "audius/audiusd:${CIRCLE_SHA1}" "audius/audiusd:edge"

  deploy-audiusd-foundation:
    docker:
      - image: cimg/base:2023.01
    resource_class: small
    steps:
      - docker-login
      - install-crane
      - run:
          name: Release audiusd to foundation
          command: |
            crane copy "audius/audiusd:${CIRCLE_SHA1}" "audius/audiusd:edge"

  deploy-audiusd-sps:
    docker:
      - image: cimg/base:2023.01
    resource_class: small
    steps:
      - docker-login
      - install-crane
      - run:
          name: Release audiusd to sps
          command: |
            crane copy "audius/audiusd:${CIRCLE_SHA1}" "audius/audiusd:current"

workflows:
  audiusd:
    jobs:
      - build-audiusd-bin
      - build-audiusd-amd64:
          context: DockerHub
          requires:
            - build-audiusd-bin
      - build-audiusd-arm64:
          context: DockerHub
          requires:
            - build-audiusd-bin
      - test-audiusd:
          requires:
            - build-audiusd-amd64
      - push-audiusd-manifest:
          context: DockerHub
          requires:
            - test-audiusd
      - deploy-audiusd-staging:
          context: DockerHub
          requires:
            - push-audiusd-manifest
          filters:
            branches:
              only:
                - main
      - deploy-audiusd-foundation-trigger:
          requires:
            - deploy-audiusd-staging
          type: approval
      - deploy-audiusd-foundation:
          context: DockerHub
          requires:
            - deploy-audiusd-foundation-trigger
      - deploy-audiusd-sps-trigger:
          requires:
            - deploy-audiusd-foundation
          type: approval
      - deploy-audiusd-sps:
          context: DockerHub
          requires:
            - deploy-audiusd-sps-trigger
