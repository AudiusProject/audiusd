package pages

import (
	"fmt"
	"github.com/AudiusProject/audiusd/pkg/api/etl/v1"
	"github.com/AudiusProject/audiusd/pkg/console/templates"
	"github.com/AudiusProject/audiusd/pkg/console/templates/layouts"
)

templ Blocks(blocks []*v1.Block, currentPage int32, hasNext bool, hasPrev bool, pageSize int32) {
	@layouts.Base("Blocks") {
		<div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6">
			<div class="flex justify-between items-center mb-6">
				<h2 class="text-2xl font-light text-gray-900 dark:text-gray-100">Latest Blocks</h2>
				<div class="text-sm text-gray-500 dark:text-gray-400">
					Page { fmt.Sprint(currentPage) } • { fmt.Sprint(pageSize) } blocks per page
				</div>
			</div>
			if len(blocks) > 0 {
				<div class="space-y-2">
					for _, block := range blocks {
						<div class="flex items-center justify-between py-4 px-6 border border-gray-200 dark:border-gray-700 rounded hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
							<div class="flex items-center gap-6 flex-1">
								<div class="flex-1">
									<div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide mb-1">Height</div>
									<a href={ templ.SafeURL(fmt.Sprintf("/block/%d", block.Height)) } class="text-xl font-light text-gray-900 dark:text-gray-100 hover:text-blue-600 dark:hover:text-blue-400 hover:underline">
										{ fmt.Sprintf("%d", block.Height) }
									</a>
								</div>
								<div class="flex-1">
									<div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide mb-1">Proposer</div>
									<a href={ templ.SafeURL(fmt.Sprintf("/validator/%s", block.Proposer)) } class="font-mono text-sm text-gray-900 dark:text-gray-100 hover:text-blue-600 dark:hover:text-blue-400 hover:underline">
										{ block.Proposer }
									</a>
								</div>
								<div class="flex-1">
									<div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide mb-1">Transactions</div>
									<div class="text-xl font-light text-gray-900 dark:text-gray-100 tabular-nums">
										{ fmt.Sprintf("%d", len(block.Transactions)) }
									</div>
								</div>
							</div>
							<div class="text-right flex-shrink-0">
								<div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide mb-1">Time</div>
								<div class="text-sm text-gray-700 dark:text-gray-300">
									@templates.TimeWithTooltip(block.Timestamp.AsTime())
								</div>
							</div>
						</div>
					}
				</div>
				<div class="flex justify-between items-center mt-6 pt-6 border-t border-gray-200 dark:border-gray-700">
					<div class="flex gap-3">
						if hasPrev {
							<a href={ templ.SafeURL(fmt.Sprintf("/blocks?page=%d&count=%d", currentPage-1, pageSize)) } class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors">
								← Previous
							</a>
						} else {
							<span class="px-4 py-2 text-sm font-medium text-gray-400 dark:text-gray-600 bg-gray-50 dark:bg-gray-800 rounded cursor-not-allowed">
								← Previous
							</span>
						}
						if hasNext {
							<a href={ templ.SafeURL(fmt.Sprintf("/blocks?page=%d&count=%d", currentPage+1, pageSize)) } class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors">
								Next →
							</a>
						} else {
							<span class="px-4 py-2 text-sm font-medium text-gray-400 dark:text-gray-600 bg-gray-50 dark:bg-gray-800 rounded cursor-not-allowed">
								Next →
							</span>
						}
					</div>
				</div>
			} else {
				<div class="text-center py-12">
					<p class="text-gray-500 dark:text-gray-400">No blocks found</p>
				</div>
			}
		</div>
	}
}
