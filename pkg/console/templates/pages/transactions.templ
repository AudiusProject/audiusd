package pages

import (
	"fmt"
	"github.com/AudiusProject/audiusd/pkg/console/templates"
	"github.com/AudiusProject/audiusd/pkg/console/templates/layouts"
	"github.com/AudiusProject/audiusd/pkg/etl/db"
)

type TransactionsProps struct {
	Transactions []*db.EtlTransaction
	BlockHeights map[string]int64
	CurrentPage  int32
	HasNext      bool
	HasPrev      bool
	PageSize     int32
}

templ Transactions(props TransactionsProps) {
	@layouts.Base("Transactions") {
		<div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6">
			<div class="flex justify-between items-center mb-6">
				<h2 class="text-2xl font-light text-gray-900 dark:text-gray-100">Latest Transactions</h2>
				<div class="text-sm text-gray-500 dark:text-gray-400">
					Page { fmt.Sprint(props.CurrentPage) } • { fmt.Sprint(props.PageSize) } transactions per page
				</div>
			</div>
			if len(props.Transactions) > 0 {
				<div class="space-y-2">
					for _, tx := range props.Transactions {
						<a href={ templ.SafeURL(fmt.Sprintf("/transaction/%s", tx.TxHash)) } class="block">
							<div class="flex items-center justify-between py-4 px-6 border border-gray-200 dark:border-gray-700 rounded hover:bg-purple-50 hover:border-purple-200 dark:hover:bg-gray-700 transition-colors cursor-pointer">
								<div class="flex items-center gap-6 flex-1">
									<div class="flex-1">
										<div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide mb-1">Hash</div>
										<div class="font-mono text-sm text-purple-600 dark:text-purple-400">
											@templates.StringWithTooltipCustom(tx.TxHash, 10, 6)
										</div>
									</div>
									<div class="flex-1">
										<div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide mb-1">Type</div>
										<span class="px-3 py-1 text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded">
											{ tx.TxType }
										</span>
									</div>
									<div class="flex-1">
										<div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide mb-1">Block</div>
										if blockHeight, exists := props.BlockHeights[tx.TxHash]; exists {
											<div class="text-xs text-purple-600 dark:text-purple-400">
												{ fmt.Sprintf("%d", blockHeight) }
											</div>
										} else {
											<div class="text-xs text-purple-600 dark:text-purple-400">
												{ fmt.Sprintf("%d", tx.BlockHeight) }
											</div>
										}
									</div>
								</div>
								<div class="text-right flex-shrink-0">
									<div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide mb-1">Time</div>
									<div class="text-sm text-gray-700 dark:text-gray-300">
										if tx.CreatedAt.Valid {
											@templates.TimeWithTooltip(tx.CreatedAt.Time)
										} else {
											<span class="text-gray-400 dark:text-gray-600">—</span>
										}
									</div>
								</div>
							</div>
						</a>
					}
				</div>
				<div class="flex justify-between items-center mt-6 pt-6 border-t border-gray-200 dark:border-gray-700">
					<div class="flex gap-3">
						if props.HasPrev {
							<a href={ templ.SafeURL(fmt.Sprintf("/transactions?page=%d&count=%d", props.CurrentPage-1, props.PageSize)) } class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors">
								← Previous
							</a>
						} else {
							<span class="px-4 py-2 text-sm font-medium text-gray-400 dark:text-gray-600 bg-gray-50 dark:bg-gray-700 rounded cursor-not-allowed">
								← Previous
							</span>
						}
						if props.HasNext {
							<a href={ templ.SafeURL(fmt.Sprintf("/transactions?page=%d&count=%d", props.CurrentPage+1, props.PageSize)) } class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors">
								Next →
							</a>
						} else {
							<span class="px-4 py-2 text-sm font-medium text-gray-400 dark:text-gray-600 bg-gray-50 dark:bg-gray-700 rounded cursor-not-allowed">
								Next →
							</span>
						}
					</div>
				</div>
			} else {
				<div class="text-center py-12">
					<p class="text-gray-500 dark:text-gray-400">No transactions found</p>
				</div>
			}
		</div>
	}
}
