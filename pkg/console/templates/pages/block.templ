package pages

import (
	"fmt"
	"github.com/AudiusProject/audiusd/pkg/console/templates"
	"github.com/AudiusProject/audiusd/pkg/console/templates/layouts"
	"github.com/AudiusProject/audiusd/pkg/etl/db"
)

type BlockProps struct {
	Block        *db.EtlBlock
	Transactions []*db.EtlTransaction
}

templ Block(props BlockProps) {
	@layouts.Base(fmt.Sprintf("Block %d", props.Block.BlockHeight)) {
		<div class="space-y-6">
			<!-- Block Overview -->
			<div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6">
				<div class="flex items-center justify-between mb-6">
					<h2 class="text-2xl font-light text-gray-900 dark:text-gray-100">Block { fmt.Sprintf("%d", props.Block.BlockHeight) }</h2>
					<div class="text-sm text-gray-500 dark:text-gray-400">
						@templates.TimeWithTooltip(props.Block.BlockTime.Time)
					</div>
				</div>
				<div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
					<div>
						<div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide mb-1">Height</div>
						<div class="text-3xl font-light text-gray-900 dark:text-gray-100 tabular-nums">
							{ fmt.Sprintf("%d", props.Block.BlockHeight) }
						</div>
					</div>
					<div class="border-l border-gray-200 dark:border-gray-700 pl-6">
						<div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide mb-1">Proposer</div>
						<a href={ templ.SafeURL(fmt.Sprintf("/validator/%s", props.Block.ProposerAddress)) } class="font-mono text-sm text-purple-600 dark:text-purple-400 hover:underline">
							{ props.Block.ProposerAddress }
						</a>
					</div>
					<div class="border-l border-gray-200 dark:border-gray-700 pl-6">
						<div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide mb-1">Transactions</div>
						<div class="text-3xl font-light text-gray-900 dark:text-gray-100 tabular-nums">
							{ fmt.Sprintf("%d", len(props.Transactions)) }
						</div>
					</div>
				</div>
			</div>
			<!-- Transactions -->
			<div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6">
				<div class="flex items-center justify-between mb-6">
					<h3 class="text-xl font-light text-gray-900 dark:text-gray-100">Transactions</h3>
					<div class="text-sm text-gray-500 dark:text-gray-400">
						{ fmt.Sprintf("%d", len(props.Transactions)) } total
					</div>
				</div>
				if len(props.Transactions) > 0 {
					<div class="space-y-2">
						for _, tx := range props.Transactions {
							<div class="flex items-center justify-between py-3 px-4 border border-gray-200 dark:border-gray-700 rounded hover:bg-purple-50 hover:border-purple-200 dark:hover:bg-gray-700 transition-colors">
								<div class="flex items-center gap-4">
									<div>
										<div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide mb-1">Hash</div>
										<a href={ templ.SafeURL(fmt.Sprintf("/transaction/%s", tx.TxHash)) } class="font-mono text-sm text-purple-600 dark:text-purple-400 hover:underline">
											{ tx.TxHash }
										</a>
									</div>
									<div class="border-l border-gray-200 dark:border-gray-700 pl-4">
										<div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide mb-1">Type</div>
										<span class="px-3 py-1 text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded">
											{ tx.TxType }
										</span>
									</div>
								</div>
								<div class="text-right">
									<div class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wide mb-1">Time</div>
									<div class="text-sm text-gray-700 dark:text-gray-300">
										@templates.TimeWithTooltip(tx.CreatedAt.Time)
									</div>
								</div>
							</div>
						}
					</div>
				} else {
					<div class="text-center py-12">
						<p class="text-gray-500 dark:text-gray-400">No transactions in this block</p>
					</div>
				}
			</div>
		</div>
	}
}
