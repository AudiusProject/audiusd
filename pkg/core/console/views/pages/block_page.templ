package pages

import (
	"fmt"
	"github.com/dustin/go-humanize"
	"time"
)

type BlockView struct {
	Height           int64
	Hash             string
	Proposer         string
	ProposerEndpoint string
	Timestamp        time.Time
	Txs              [][]byte
}

templ (p *Pages) BlockPageHTML(view *BlockView) {
	@p.layout.SiteFrame() {
		<div class="flex justify-between mt-4 text-sm">
			@p.components.Link("/block/%d", view.Height-1) {
				<div>Previous Block</div>
			}
			@p.components.Link("/block/%d", view.Height+1) {
				<div>Next Block</div>
			}
		</div>
		<div class="p-4">
			<h1 class="text-xl">
				Block { fmt.Sprint(view.Height) } Details
			</h1>
			<div class="p-4 h-full">
				// <div>
				// 	@p.components.Link("/block/%s", view.Hash) {
				// 		<div>Hash: { view.Hash }</div>
				// 	}
				// </div>
				// <div>
				// 	@p.components.Link("/nodes/%s", view.Proposer) {
				// 		<div>Proposer: { view.Proposer }</div>
				// 	}
				// </div>
				<div>
					@p.components.Link("/block/%d", view.Height) {
						<div>Height: { fmt.Sprint(view.Height) }</div>
					}
				</div>
				<div>
					Age: { humanize.Time(view.Timestamp) }
				</div>
				<div class="px-4 py-8 p text-md text-l">
					Transactions
					for _, tx := range view.Txs {
						<div class="uk-card-body">
							<div>
								<div>
									@p.components.Link("/tx/%s", p.components.ToTxHash(tx)) {
										<div>Hash: { p.components.ToTxHash(tx) }</div>
									}
								</div>
							</div>
						</div>
					}
				</div>
			</div>
		</div>
	}
}
