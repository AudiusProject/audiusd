// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func (p *Pages) UploadPage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<section class=\"max-w-5xl mx-auto mt-10\" x-data=\"{\n\t\t\t\tuploading: false,\n\t\t\t\tsuccess: false,\n\t\t\t\terror: &#39;&#39;,\n\t\t\t\tfile: null,\n\t\t\t\tartwork: null,\n\t\t\t\taudioURL: &#39;&#39;,\n\t\t\t\tartURL: &#39;&#39;,\n\t\t\t\ttagInput: &#39;&#39;,\n\t\t\t\ttags: [],\n\t\t\t\tdragging: false,\n\t\t\t\tselectFile(e) {\n\t\t\t\t\tthis.file = e.target.files[0];\n\t\t\t\t\tthis.audioURL = URL.createObjectURL(this.file);\n\t\t\t\t},\n\t\t\t\tdropFile(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.file = e.dataTransfer.files[0];\n\t\t\t\t\tthis.audioURL = URL.createObjectURL(this.file);\n\t\t\t\t\tthis.dragging = false;\n\t\t\t\t},\n\t\t\t\tselectArtwork(e) {\n\t\t\t\t\tthis.artwork = e.target.files[0];\n\t\t\t\t\tthis.artURL = URL.createObjectURL(this.artwork);\n\t\t\t\t},\n\t\t\t\taddTagsFromInput() {\n\t\t\t\t\tif (this.tagInput.trim() !== &#39;&#39;) {\n\t\t\t\t\t\tthis.tagInput.split(&#39;,&#39;).forEach(t =&gt; {\n\t\t\t\t\t\t\tconst tag = t.trim();\n\t\t\t\t\t\t\tif (tag &amp;&amp; !this.tags.includes(tag)) {\n\t\t\t\t\t\t\t\tthis.tags.push(tag);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.tagInput = &#39;&#39;;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tremoveTag(tag) {\n\t\t\t\t\tthis.tags = this.tags.filter(t =&gt; t !== tag);\n\t\t\t\t},\n\t\t\t\treset() {\n\t\t\t\t\tthis.file = null;\n\t\t\t\t\tthis.artwork = null;\n\t\t\t\t\tthis.audioURL = &#39;&#39;;\n\t\t\t\t\tthis.artURL = &#39;&#39;;\n\t\t\t\t\tthis.tags = [];\n\t\t\t\t\tthis.tagInput = &#39;&#39;;\n\t\t\t\t\tthis.$refs.fileInput.value = &#39;&#39;;\n\t\t\t\t\tthis.$refs.artworkInput.value = &#39;&#39;;\n\t\t\t\t}\n\t\t\t}\"><!-- Two-column layout --><div class=\"grid grid-cols-1 md:grid-cols-2 gap-8 w-full\"><!-- Left: Artwork + Audio --><div class=\"space-y-4 text-center w-full\" x-on:dragover.prevent=\"dragging = true\" x-on:dragleave.prevent=\"dragging = false\" x-on:drop=\"dropFile\"><!-- Artwork Preview --><div class=\"rounded-xl border border-dashed p-4 cursor-pointer transition-all aspect-square flex items-center justify-center bg-gray-50 overflow-hidden min-h-[300px]\" x-bind:class=\"{ &#39;border-blue-500 bg-blue-100&#39;: dragging }\" x-on:click=\"$refs.artworkInput.click()\"><input type=\"file\" accept=\"image/*\" name=\"artwork\" x-ref=\"artworkInput\" class=\"hidden\" x-on:change=\"selectArtwork\"><template x-if=\"!artURL\"><p class=\"text-gray-500\">Click or Drop Artwork</p></template><template x-if=\"artURL\"><img :src=\"artURL\" alt=\"Artwork preview\" class=\"object-cover w-full h-full rounded-xl\" x-on:load=\"$nextTick(() =&gt; window.dispatchEvent(new Event(&#39;resize&#39;)))\"></template></div><!-- Audio Upload --><div class=\"border-2 border-dashed rounded-xl p-4 cursor-pointer transition-all w-full\" x-bind:class=\"{ &#39;border-blue-500 bg-blue-50&#39;: dragging }\" x-on:click=\"$refs.fileInput.click()\"><input type=\"file\" accept=\"audio/*\" name=\"file\" x-ref=\"fileInput\" class=\"hidden\" x-on:change=\"selectFile\"><template x-if=\"!file\"><div><p class=\"font-semibold\">Click or Drop Audio File</p><p class=\"text-sm text-gray-500 mt-1\">MP3, WAV, etc.</p></div></template><template x-if=\"file\"><div class=\"mt-2\"><p class=\"font-medium\">Selected: <span x-text=\"file.name\"></span></p><audio class=\"mt-2 w-full\" x-bind:src=\"audioURL\" controls></audio></div></template></div></div><!-- Right: Metadata Form --><form class=\"space-y-4 w-full\" x-on:submit.prevent=\"\n\t\t\t\t\t\tif (!file) {\n\t\t\t\t\t\t\terror = &#39;Please select an audio file.&#39;;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuploading = true;\n\t\t\t\t\t\terror = &#39;&#39;;\n\t\t\t\t\t\tsuccess = false;\n\t\t\t\t\t\tlet formData = new FormData($event.target);\n\t\t\t\t\t\tformData.append(&#39;file&#39;, file);\n\t\t\t\t\t\tif (artwork) formData.append(&#39;artwork&#39;, artwork);\n\t\t\t\t\t\tformData.append(&#39;tags&#39;, tags.join(&#39;,&#39;));\n\t\t\t\t\t\tfetch(&#39;/uploads&#39;, {\n\t\t\t\t\t\t\tmethod: &#39;POST&#39;,\n\t\t\t\t\t\t\tbody: formData\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(res =&gt; {\n\t\t\t\t\t\t\tif (!res.ok) throw new Error(&#39;Upload failed&#39;);\n\t\t\t\t\t\t\tsuccess = true;\n\t\t\t\t\t\t\treset();\n\t\t\t\t\t\t\t$event.target.reset();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(err =&gt; error = err.message)\n\t\t\t\t\t\t.finally(() =&gt; uploading = false)\n\t\t\t\t\t\"><h2 class=\"text-2xl font-bold\">Track Info</h2><!-- Title --><div><label class=\"block text-sm font-medium mb-1\" for=\"title\">Track Title</label> <input type=\"text\" name=\"title\" id=\"title\" required class=\"w-full border border-gray-300 rounded-lg px-3 py-2 bg-white text-black placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"></div><!-- Artist --><div><label class=\"block text-sm font-medium mb-1\" for=\"artist\">Artist</label> <input type=\"text\" name=\"artist\" id=\"artist\" required class=\"w-full border border-gray-300 rounded-lg px-3 py-2 bg-white text-black placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"></div><!-- Genre --><div><label class=\"block text-sm font-medium mb-1\" for=\"genre\">Genre</label> <select name=\"genre\" id=\"genre\" required class=\"w-full border border-gray-300 rounded-lg px-3 py-2 bg-white text-black focus:outline-none focus:ring-2 focus:ring-blue-500\"><option value=\"\">Select Genre</option> <option>Electronic</option> <option>Hip Hop</option> <option>Rock</option> <option>Pop</option> <option>Ambient</option> <option>Other</option></select></div><!-- Mood --><div><label class=\"block text-sm font-medium mb-1\" for=\"mood\">Mood</label> <select name=\"mood\" id=\"mood\" class=\"w-full border border-gray-300 rounded-lg px-3 py-2 bg-white text-black focus:outline-none focus:ring-2 focus:ring-blue-500\"><option value=\"\">Select Mood</option> <option>Chill</option> <option>Energetic</option> <option>Dark</option> <option>Uplifting</option> <option>Melancholic</option></select></div><!-- Tags --><div><label class=\"block text-sm font-medium mb-1\" for=\"tags\">Tags</label> <input type=\"text\" name=\"tags-input\" id=\"tags\" x-model=\"tagInput\" @blur=\"addTagsFromInput\" @keydown.enter.prevent=\"addTagsFromInput\" placeholder=\"e.g. vaporwave, chill\" class=\"w-full border border-gray-300 rounded-lg px-3 py-2 bg-white text-black placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"><div class=\"flex flex-wrap gap-2 mt-2\"><template x-for=\"(tag, index) in tags\" :key=\"index\"><span class=\"inline-flex items-center bg-blue-100 text-blue-800 text-sm px-2 py-1 rounded-full\"><span x-text=\"tag\"></span> <button type=\"button\" class=\"ml-1 text-blue-500 hover:text-red-500\" @click=\"removeTag(tag)\">Ã—</button></span></template></div></div><!-- Description --><div><label class=\"block text-sm font-medium mb-1\" for=\"description\">Description</label> <textarea name=\"description\" id=\"description\" rows=\"4\" placeholder=\"Write something about your track...\" class=\"w-full border border-gray-300 rounded-lg px-3 py-2 bg-white text-black focus:outline-none focus:ring-2 focus:ring-blue-500\"></textarea></div></form></div><!-- Upload Button + Messages --><div class=\"mt-8 text-center\"><button type=\"submit\" form=\"upload-form\" class=\"fr-btn px-6 py-3 text-lg font-semibold\" x-bind:disabled=\"uploading\"><span x-show=\"!uploading\">Upload</span> <span x-show=\"uploading\">Uploading...</span></button><div class=\"mt-4\" x-show=\"success\"><div class=\"fr-alert fr-alert-success\">Upload successful!</div></div><div class=\"mt-4\" x-show=\"error\"><div class=\"fr-alert fr-alert-error\" x-text=\"error\"></div></div></div></section>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = p.layout.SiteFrame().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
