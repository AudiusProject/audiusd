package pages

import (
	"encoding/json"
	"github.com/AudiusProject/audiusd/pkg/core/gen/core_proto"
	"github.com/dustin/go-humanize"
	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	"time"
)

type TxView struct {
	Hash      string
	Block     string
	Timestamp time.Time
	Tx        []byte
}

type TxPageJSONResponse struct {
	Hash  string                 `json:"txhash"`
	Block string                 `json:"block_height"`
	Tx    map[string]interface{} `json:"tx"`
}

func (p *Pages) TxPageJSON(data *TxView) (*TxPageJSONResponse, error) {
	obj := p.toJSON(data.Tx)

	return &TxPageJSONResponse{
		Hash:  data.Hash,
		Block: data.Block,
		Tx:    obj,
	}, nil
}

func (p *Pages) toJSON(tx []byte) map[string]interface{} {
	empty := make(map[string]interface{})

	var transaction core_proto.SignedTransaction
	err := proto.Unmarshal(tx, &transaction)
	if err != nil {
		//  fmt.Errorf("could not marshal tx into signed tx: %v", err)
		return empty
	}

	jsonData, err := protojson.Marshal(&transaction)
	if err != nil {
		// fmt.Errorf("could not marshal proto into json: %v", err)
		return empty
	}

	var obj map[string]interface{}
	if err := json.Unmarshal(jsonData, &obj); err != nil {
		return empty
	}

	return obj
}

func (p *Pages) renderJSON(obj map[string]interface{}) string {
	jsonData, err := json.MarshalIndent(obj, "", "  ")
	if err != nil {
		// TODO: add log here
		return ""
	}
	return string(jsonData)
}

templ (p *Pages) TxPageHTML(view *TxView) {
	@p.layout.SiteFrame() {
		<div class="container mx-auto px-4 py-8" x-data="{
			tx: null,
			async loadTransaction() {
				const hash = window.location.pathname.split('/').pop();
				const query = `
					query GetTransaction($hash: String) {
						getTransaction(hash: $hash) {
							hash
							index
						}
					}
				`;
				
				try {
					const data = await $store.app.query(query, { hash });
					if (data.getTransaction) {
						this.tx = data.getTransaction;
					}
				} catch (err) {
					console.error('Failed to load transaction:', err);
				}
			}
		}" x-init="loadTransaction()">
			<template x-if="tx">
				<div>
					<h1 class="text-3xl font-bold mb-6">Transaction Details</h1>

					<!-- Transaction Info Card -->
					<div class="bg-white rounded-lg shadow-lg overflow-hidden">
						<div class="p-6">
							<div class="space-y-6">
								<div>
									<h3 class="text-sm font-medium text-gray-500">Transaction Hash</h3>
									<p class="mt-1 text-sm font-mono break-all" x-text="tx.hash"></p>
								</div>
								<div>
									<h3 class="text-sm font-medium text-gray-500">Index</h3>
									<p class="mt-1" x-text="tx.index"></p>
								</div>
							</div>
						</div>
					</div>
				</div>
			</template>

			<!-- Loading State -->
			<div x-show="$store.app.loading" class="flex justify-center items-center py-8">
				<div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
			</div>

			<!-- Error State -->
			<div x-show="$store.app.error" class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mt-4" role="alert">
				<strong class="font-bold">Error!</strong>
				<span class="block sm:inline" x-text="$store.app.error"></span>
			</div>
		</div>
	}
}
