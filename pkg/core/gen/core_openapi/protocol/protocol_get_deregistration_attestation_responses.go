// Code generated by go-swagger; DO NOT EDIT.

package protocol

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/AudiusProject/audiusd/pkg/core/gen/models"
)

// ProtocolGetDeregistrationAttestationReader is a Reader for the ProtocolGetDeregistrationAttestation structure.
type ProtocolGetDeregistrationAttestationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProtocolGetDeregistrationAttestationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProtocolGetDeregistrationAttestationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewProtocolGetDeregistrationAttestationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProtocolGetDeregistrationAttestationOK creates a ProtocolGetDeregistrationAttestationOK with default headers values
func NewProtocolGetDeregistrationAttestationOK() *ProtocolGetDeregistrationAttestationOK {
	return &ProtocolGetDeregistrationAttestationOK{}
}

/*
ProtocolGetDeregistrationAttestationOK describes a response with status code 200, with default header values.

A successful response.
*/
type ProtocolGetDeregistrationAttestationOK struct {
	Payload *models.ProtocolDeregistrationAttestationResponse
}

// IsSuccess returns true when this protocol get deregistration attestation o k response has a 2xx status code
func (o *ProtocolGetDeregistrationAttestationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this protocol get deregistration attestation o k response has a 3xx status code
func (o *ProtocolGetDeregistrationAttestationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this protocol get deregistration attestation o k response has a 4xx status code
func (o *ProtocolGetDeregistrationAttestationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this protocol get deregistration attestation o k response has a 5xx status code
func (o *ProtocolGetDeregistrationAttestationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this protocol get deregistration attestation o k response a status code equal to that given
func (o *ProtocolGetDeregistrationAttestationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the protocol get deregistration attestation o k response
func (o *ProtocolGetDeregistrationAttestationOK) Code() int {
	return 200
}

func (o *ProtocolGetDeregistrationAttestationOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /core/grpc/attest/deregistration][%d] protocolGetDeregistrationAttestationOK %s", 200, payload)
}

func (o *ProtocolGetDeregistrationAttestationOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /core/grpc/attest/deregistration][%d] protocolGetDeregistrationAttestationOK %s", 200, payload)
}

func (o *ProtocolGetDeregistrationAttestationOK) GetPayload() *models.ProtocolDeregistrationAttestationResponse {
	return o.Payload
}

func (o *ProtocolGetDeregistrationAttestationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProtocolDeregistrationAttestationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProtocolGetDeregistrationAttestationDefault creates a ProtocolGetDeregistrationAttestationDefault with default headers values
func NewProtocolGetDeregistrationAttestationDefault(code int) *ProtocolGetDeregistrationAttestationDefault {
	return &ProtocolGetDeregistrationAttestationDefault{
		_statusCode: code,
	}
}

/*
ProtocolGetDeregistrationAttestationDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ProtocolGetDeregistrationAttestationDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this protocol get deregistration attestation default response has a 2xx status code
func (o *ProtocolGetDeregistrationAttestationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this protocol get deregistration attestation default response has a 3xx status code
func (o *ProtocolGetDeregistrationAttestationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this protocol get deregistration attestation default response has a 4xx status code
func (o *ProtocolGetDeregistrationAttestationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this protocol get deregistration attestation default response has a 5xx status code
func (o *ProtocolGetDeregistrationAttestationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this protocol get deregistration attestation default response a status code equal to that given
func (o *ProtocolGetDeregistrationAttestationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the protocol get deregistration attestation default response
func (o *ProtocolGetDeregistrationAttestationDefault) Code() int {
	return o._statusCode
}

func (o *ProtocolGetDeregistrationAttestationDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /core/grpc/attest/deregistration][%d] Protocol_GetDeregistrationAttestation default %s", o._statusCode, payload)
}

func (o *ProtocolGetDeregistrationAttestationDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /core/grpc/attest/deregistration][%d] Protocol_GetDeregistrationAttestation default %s", o._statusCode, payload)
}

func (o *ProtocolGetDeregistrationAttestationDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ProtocolGetDeregistrationAttestationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
