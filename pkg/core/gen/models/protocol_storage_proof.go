// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProtocolStorageProof protocol storage proof
//
// swagger:model protocolStorageProof
type ProtocolStorageProof struct {

	// cid
	Cid string `json:"cid,omitempty"`

	// encrypted proof
	// Format: byte
	EncryptedProof strfmt.Base64 `json:"encryptedProof,omitempty"`

	// encrypted secret
	// Format: byte
	EncryptedSecret strfmt.Base64 `json:"encryptedSecret,omitempty"`

	// ephemeral public key
	// Format: byte
	EphemeralPublicKey strfmt.Base64 `json:"ephemeralPublicKey,omitempty"`

	// hash
	// Format: byte
	Hash strfmt.Base64 `json:"hash,omitempty"`

	// height
	Height string `json:"height,omitempty"`

	// prover address
	ProverAddress string `json:"proverAddress,omitempty"`

	// verifier address
	VerifierAddress string `json:"verifierAddress,omitempty"`
}

// Validate validates this protocol storage proof
func (m *ProtocolStorageProof) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this protocol storage proof based on context it is used
func (m *ProtocolStorageProof) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProtocolStorageProof) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProtocolStorageProof) UnmarshalBinary(b []byte) error {
	var res ProtocolStorageProof
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
