// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProtocolValidatorRegistrationLegacy protocol validator registration legacy
//
// swagger:model protocolValidatorRegistrationLegacy
type ProtocolValidatorRegistrationLegacy struct {

	// comet address
	CometAddress string `json:"cometAddress,omitempty"`

	// endpoint
	Endpoint string `json:"endpoint,omitempty"`

	// eth block
	EthBlock string `json:"ethBlock,omitempty"`

	// node type
	NodeType string `json:"nodeType,omitempty"`

	// power
	Power string `json:"power,omitempty"`

	// pub key
	// Format: byte
	PubKey strfmt.Base64 `json:"pubKey,omitempty"`

	// sp Id
	SpID string `json:"spId,omitempty"`
}

// Validate validates this protocol validator registration legacy
func (m *ProtocolValidatorRegistrationLegacy) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this protocol validator registration legacy based on context it is used
func (m *ProtocolValidatorRegistrationLegacy) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProtocolValidatorRegistrationLegacy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProtocolValidatorRegistrationLegacy) UnmarshalBinary(b []byte) error {
	var res ProtocolValidatorRegistrationLegacy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
