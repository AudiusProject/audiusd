// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProtocolManageEntityLegacy protocol manage entity legacy
//
// swagger:model protocolManageEntityLegacy
type ProtocolManageEntityLegacy struct {

	// action
	Action string `json:"action,omitempty"`

	// entity Id
	EntityID string `json:"entityId,omitempty"`

	// entity type
	EntityType string `json:"entityType,omitempty"`

	// metadata
	Metadata string `json:"metadata,omitempty"`

	// nonce
	Nonce string `json:"nonce,omitempty"`

	// signature
	Signature string `json:"signature,omitempty"`

	// signer
	Signer string `json:"signer,omitempty"`

	// user Id
	UserID string `json:"userId,omitempty"`
}

// Validate validates this protocol manage entity legacy
func (m *ProtocolManageEntityLegacy) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this protocol manage entity legacy based on context it is used
func (m *ProtocolManageEntityLegacy) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProtocolManageEntityLegacy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProtocolManageEntityLegacy) UnmarshalBinary(b []byte) error {
	var res ProtocolManageEntityLegacy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
