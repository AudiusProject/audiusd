{
  "swagger": "2.0",
  "info": {
    "title": "protocol.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Protocol"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/core/grpc/attest/deregistration": {
      "post": {
        "operationId": "Protocol_GetDeregistrationAttestation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocolDeregistrationAttestationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "deregistration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolValidatorDeregistration"
            }
          }
        ],
        "tags": [
          "Protocol"
        ]
      }
    },
    "/core/grpc/attest/registration": {
      "post": {
        "operationId": "Protocol_GetRegistrationAttestation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocolRegistrationAttestationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "registration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolValidatorRegistration"
            }
          }
        ],
        "tags": [
          "Protocol"
        ]
      }
    },
    "/core/grpc/attest/reward": {
      "get": {
        "operationId": "Protocol_GetRewardAttestation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocolRewardAttestationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "description": "base64 encoded json data",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "signature",
            "description": "signed sha256 hash of the base64 encoded data",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Protocol"
        ]
      }
    },
    "/core/grpc/block/{height}": {
      "get": {
        "operationId": "Protocol_GetBlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocolBlockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Protocol"
        ]
      }
    },
    "/core/grpc/node_info": {
      "get": {
        "operationId": "Protocol_GetNodeInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocolNodeInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Protocol"
        ]
      }
    },
    "/core/grpc/ping": {
      "get": {
        "operationId": "Protocol_Ping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocolPingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Protocol"
        ]
      }
    },
    "/core/grpc/transaction": {
      "post": {
        "operationId": "Protocol_SendTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocolTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "transaction",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolSignedTransaction"
            }
          }
        ],
        "tags": [
          "Protocol"
        ]
      }
    },
    "/core/grpc/transaction/forward": {
      "post": {
        "operationId": "Protocol_ForwardTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocolForwardTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "transaction",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolSignedTransaction"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Protocol"
        ]
      }
    },
    "/core/grpc/transaction/{txhash}": {
      "get": {
        "operationId": "Protocol_GetTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocolTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "txhash",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Protocol"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protocolAttestation": {
      "type": "object",
      "properties": {
        "signatures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "validatorRegistration": {
          "$ref": "#/definitions/protocolValidatorRegistration"
        },
        "validatorDeregistration": {
          "$ref": "#/definitions/protocolValidatorDeregistration"
        }
      }
    },
    "protocolBlockResponse": {
      "type": "object",
      "properties": {
        "blockhash": {
          "type": "string"
        },
        "chainid": {
          "type": "string"
        },
        "proposer": {
          "type": "string"
        },
        "height": {
          "type": "string",
          "format": "int64"
        },
        "transactions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocolSignedTransaction"
          },
          "title": "TODO: deprecate in favor of txs"
        },
        "currentHeight": {
          "type": "string",
          "format": "int64"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "transactionResponses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocolTransactionResponse"
          }
        }
      }
    },
    "protocolDeregistrationAttestationResponse": {
      "type": "object",
      "properties": {
        "signature": {
          "type": "string"
        },
        "deregistration": {
          "$ref": "#/definitions/protocolValidatorDeregistration"
        }
      }
    },
    "protocolForwardTransactionResponse": {
      "type": "object"
    },
    "protocolManageEntityLegacy": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "int64"
        },
        "entityType": {
          "type": "string"
        },
        "entityId": {
          "type": "string",
          "format": "int64"
        },
        "action": {
          "type": "string"
        },
        "metadata": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        },
        "signer": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        }
      }
    },
    "protocolNodeInfoResponse": {
      "type": "object",
      "properties": {
        "chainid": {
          "type": "string"
        },
        "synced": {
          "type": "boolean"
        },
        "cometAddress": {
          "type": "string"
        },
        "ethAddress": {
          "type": "string"
        },
        "currentHeight": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocolPingResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "protocolRegistrationAttestationResponse": {
      "type": "object",
      "properties": {
        "signature": {
          "type": "string"
        },
        "registration": {
          "$ref": "#/definitions/protocolValidatorRegistration"
        }
      }
    },
    "protocolRewardAttestationResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "title": "base64 encoded json data + original signature"
        },
        "signature": {
          "type": "string",
          "title": "signed sha256 hash of the base64 encoded data"
        }
      }
    },
    "protocolSignedTransaction": {
      "type": "object",
      "properties": {
        "signature": {
          "type": "string"
        },
        "requestId": {
          "type": "string"
        },
        "plays": {
          "$ref": "#/definitions/protocolTrackPlays"
        },
        "validatorRegistration": {
          "$ref": "#/definitions/protocolValidatorRegistrationLegacy"
        },
        "slaRollup": {
          "$ref": "#/definitions/protocolSlaRollup"
        },
        "manageEntity": {
          "$ref": "#/definitions/protocolManageEntityLegacy"
        },
        "validatorDeregistration": {
          "$ref": "#/definitions/protocolValidatorMisbehaviorDeregistration"
        },
        "storageProof": {
          "$ref": "#/definitions/protocolStorageProof"
        },
        "storageProofVerification": {
          "$ref": "#/definitions/protocolStorageProofVerification"
        },
        "attestation": {
          "$ref": "#/definitions/protocolAttestation"
        }
      }
    },
    "protocolSlaNodeReport": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "numBlocksProposed": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protocolSlaRollup": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "blockStart": {
          "type": "string",
          "format": "int64"
        },
        "blockEnd": {
          "type": "string",
          "format": "int64"
        },
        "reports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocolSlaNodeReport"
          }
        }
      }
    },
    "protocolStorageProof": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "int64"
        },
        "address": {
          "type": "string"
        },
        "proverAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cid": {
          "type": "string"
        },
        "proofSignature": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocolStorageProofVerification": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "int64"
        },
        "proof": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocolTrackPlay": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "trackId": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "signature": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      }
    },
    "protocolTrackPlays": {
      "type": "object",
      "properties": {
        "plays": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocolTrackPlay"
          }
        }
      }
    },
    "protocolTransactionResponse": {
      "type": "object",
      "properties": {
        "txhash": {
          "type": "string"
        },
        "transaction": {
          "$ref": "#/definitions/protocolSignedTransaction"
        },
        "blockHeight": {
          "type": "string",
          "format": "int64"
        },
        "blockHash": {
          "type": "string"
        }
      }
    },
    "protocolValidatorDeregistration": {
      "type": "object",
      "properties": {
        "cometAddress": {
          "type": "string"
        },
        "pubKey": {
          "type": "string",
          "format": "byte"
        },
        "deadline": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocolValidatorMisbehaviorDeregistration": {
      "type": "object",
      "properties": {
        "cometAddress": {
          "type": "string"
        },
        "pubKey": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocolValidatorRegistration": {
      "type": "object",
      "properties": {
        "delegateWallet": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "nodeType": {
          "type": "string"
        },
        "spId": {
          "type": "string"
        },
        "ethBlock": {
          "type": "string",
          "format": "int64"
        },
        "cometAddress": {
          "type": "string"
        },
        "pubKey": {
          "type": "string",
          "format": "byte"
        },
        "power": {
          "type": "string",
          "format": "int64"
        },
        "deadline": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocolValidatorRegistrationLegacy": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "cometAddress": {
          "type": "string"
        },
        "ethBlock": {
          "type": "string"
        },
        "nodeType": {
          "type": "string"
        },
        "spId": {
          "type": "string"
        },
        "pubKey": {
          "type": "string",
          "format": "byte"
        },
        "power": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
