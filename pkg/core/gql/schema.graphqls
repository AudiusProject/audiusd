type Block {
  height: Int!
  chainId: String!
  hash: String!
  proposer: String!
  transactions: [Transaction!]!
  timestamp: String!
}

type Transaction {
  index: Int!
  hash: String!
  blockHeight: Int!
  timestamp: String!
  data: String! # Base64 encoded transaction data
}

type Query {
  getBlock(height: Int): Block
  getTransaction(hash: String): Transaction

  # Overview queries
  getLatestBlocks(limit: Int = 10): [Block!]!
  getLatestTransactions(limit: Int = 10): [Transaction!]!

  # Analytics queries
  getAnalytics: Analytics!
  getTransactionStats(hours: Int = 24): [TransactionStat!]!

  # Storage proof queries
  getStorageProofs(startBlock: Int!, endBlock: Int!, address: String): [StorageProof!]!
  getNodeUptime(address: String!, rollupId: Int): NodeUptime
  getAllValidatorUptimes(rollupId: Int): [NodeUptime!]!
}

type Analytics {
  totalBlocks: Int!
  totalTransactions: Int!
  totalPlays: Int!
  totalValidators: Int!
  totalManageEntities: Int!
}

type TransactionStat {
  hour: String! # ISO timestamp
  txCount: Int!
  txType: String!
}

type StorageProof {
  blockHeight: Int!
  proverAddress: String!
  proverEndpoint: String
  cid: String!
  status: String!
}

type NodeUptime {
  address: String!
  endpoint: String
  isValidator: Boolean!
  activeReport: SLAReport!
  reportHistory: [SLAReport!]!
}

type SLAReport {
  rollupId: Int!
  txHash: String!
  blockStart: Int!
  blockEnd: Int!
  blocksProposed: Int!
  quota: Int!
  posChallengesFailed: Int!
  posChallengesTotal: Int!
  timestamp: String!
}
