// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type ProofStatus string

const (
	ProofStatusUnresolved ProofStatus = "unresolved"
	ProofStatusPass       ProofStatus = "pass"
	ProofStatusFail       ProofStatus = "fail"
)

func (e *ProofStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ProofStatus(s)
	case string:
		*e = ProofStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for ProofStatus: %T", src)
	}
	return nil
}

type NullProofStatus struct {
	ProofStatus ProofStatus
	Valid       bool // Valid is true if ProofStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullProofStatus) Scan(value interface{}) error {
	if value == nil {
		ns.ProofStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ProofStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullProofStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ProofStatus), nil
}

type CoreAppState struct {
	BlockHeight int64
	AppHash     []byte
	CreatedAt   pgtype.Timestamp
}

type CoreBlock struct {
	Rowid     int64
	Height    int64
	ChainID   string
	Hash      string
	Proposer  string
	CreatedAt pgtype.Timestamp
}

type CoreTransaction struct {
	Rowid       int64
	BlockID     int64
	Index       int32
	TxHash      string
	Transaction []byte
	CreatedAt   pgtype.Timestamp
}

type CoreTxStat struct {
	ID          int32
	TxType      string
	TxHash      string
	BlockHeight int64
	CreatedAt   pgtype.Timestamp
}

type CoreValidator struct {
	Rowid        int32
	PubKey       string
	Endpoint     string
	EthAddress   string
	CometAddress string
	EthBlock     string
	NodeType     string
	SpID         string
	CometPubKey  string
}

type SlaNodeReport struct {
	ID             int32
	Address        string
	BlocksProposed int32
	SlaRollupID    pgtype.Int4
}

type SlaRollup struct {
	ID         int32
	TxHash     string
	BlockStart int64
	BlockEnd   int64
	Time       pgtype.Timestamp
}

type StorageProof struct {
	ID              int32
	BlockHeight     int64
	Address         string
	Cid             pgtype.Text
	ProofSignature  pgtype.Text
	Proof           pgtype.Text
	ProverAddresses []string
	Status          ProofStatus
}

type StorageProofPeer struct {
	ID              int32
	BlockHeight     int64
	ProverAddresses []string
}
