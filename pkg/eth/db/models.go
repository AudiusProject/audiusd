// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package db

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type EthActiveProposal struct {
	ID                        int64  `json:"id"`
	Proposer                  string `json:"proposer"`
	SubmissionBlockNumber     int64  `json:"submission_block_number"`
	TargetContractRegistryKey string `json:"target_contract_registry_key"`
	TargetContractAddress     string `json:"target_contract_address"`
	CallValue                 int64  `json:"call_value"`
	FunctionSignature         string `json:"function_signature"`
	CallData                  string `json:"call_data"`
}

type EthFundingRound struct {
	RoundNum     int32            `json:"round_num"`
	Blocknumber  int64            `json:"blocknumber"`
	CreationTime pgtype.Timestamp `json:"creation_time"`
}

type EthRegisteredEndpoint struct {
	ID             int32            `json:"id"`
	ServiceType    string           `json:"service_type"`
	Owner          string           `json:"owner"`
	DelegateWallet string           `json:"delegate_wallet"`
	Endpoint       string           `json:"endpoint"`
	Blocknumber    int64            `json:"blocknumber"`
	RegisteredAt   pgtype.Timestamp `json:"registered_at"`
}

type EthServiceProvider struct {
	Address           string `json:"address"`
	DeployerStake     int64  `json:"deployer_stake"`
	DeployerCut       int64  `json:"deployer_cut"`
	ValidBounds       bool   `json:"valid_bounds"`
	NumberOfEndpoints int32  `json:"number_of_endpoints"`
	MinAccountStake   int64  `json:"min_account_stake"`
	MaxAccountStake   int64  `json:"max_account_stake"`
}

type EthStaked struct {
	Address     string `json:"address"`
	TotalStaked int64  `json:"total_staked"`
}
