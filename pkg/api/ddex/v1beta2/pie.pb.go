// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: ddex/v1beta2/pie.proto

package v1beta2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Party Identification and Enrichment (PIE) message from the DDEX standard
type PartyIdentificationEnrichment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *DDEXMessageHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// unstructed metadata for the message, limited to 2048 bytes
	Metadata []byte `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// address of the PIE message, must be empty for new PIE messages
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// addresses this PIE refers to
	PartyAddresses []string `protobuf:"bytes,4,rep,name=party_addresses,json=partyAddresses,proto3" json:"party_addresses,omitempty"`
	// list of handles for the party
	HandleList []*Handle `protobuf:"bytes,5,rep,name=handle_list,json=handleList,proto3" json:"handle_list,omitempty"`
	// displays whether this party is verified by the signer of the PIE message
	Verified *Verified `protobuf:"bytes,6,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *PartyIdentificationEnrichment) Reset() {
	*x = PartyIdentificationEnrichment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_pie_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyIdentificationEnrichment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyIdentificationEnrichment) ProtoMessage() {}

func (x *PartyIdentificationEnrichment) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_pie_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyIdentificationEnrichment.ProtoReflect.Descriptor instead.
func (*PartyIdentificationEnrichment) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_pie_proto_rawDescGZIP(), []int{0}
}

func (x *PartyIdentificationEnrichment) GetHeader() *DDEXMessageHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *PartyIdentificationEnrichment) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PartyIdentificationEnrichment) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PartyIdentificationEnrichment) GetPartyAddresses() []string {
	if x != nil {
		return x.PartyAddresses
	}
	return nil
}

func (x *PartyIdentificationEnrichment) GetHandleList() []*Handle {
	if x != nil {
		return x.HandleList
	}
	return nil
}

func (x *PartyIdentificationEnrichment) GetVerified() *Verified {
	if x != nil {
		return x.Verified
	}
	return nil
}

// user handle information
type Handle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type of handle, e.g. "audius", "youtube", "spotify", "apple  "
	HandleType string `protobuf:"bytes,1,opt,name=handle_type,json=handleType,proto3" json:"handle_type,omitempty"`
	// value of the handle, e.g. "audius123", "youtube123", "spotify123", "apple123"
	HandleValue string `protobuf:"bytes,2,opt,name=handle_value,json=handleValue,proto3" json:"handle_value,omitempty"`
}

func (x *Handle) Reset() {
	*x = Handle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_pie_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Handle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handle) ProtoMessage() {}

func (x *Handle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_pie_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handle.ProtoReflect.Descriptor instead.
func (*Handle) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_pie_proto_rawDescGZIP(), []int{1}
}

func (x *Handle) GetHandleType() string {
	if x != nil {
		return x.HandleType
	}
	return ""
}

func (x *Handle) GetHandleValue() string {
	if x != nil {
		return x.HandleValue
	}
	return ""
}

// displays whether this party is verified by the signer of the PIE message
type Verified struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verified bool `protobuf:"varint,1,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *Verified) Reset() {
	*x = Verified{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_pie_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Verified) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verified) ProtoMessage() {}

func (x *Verified) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_pie_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verified.ProtoReflect.Descriptor instead.
func (*Verified) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_pie_proto_rawDescGZIP(), []int{2}
}

func (x *Verified) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

type PartyIdentificationEnrichmentAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PieAddress string `protobuf:"bytes,1,opt,name=pie_address,json=pieAddress,proto3" json:"pie_address,omitempty"`
	Nonce      uint64 `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *PartyIdentificationEnrichmentAck) Reset() {
	*x = PartyIdentificationEnrichmentAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_pie_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyIdentificationEnrichmentAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyIdentificationEnrichmentAck) ProtoMessage() {}

func (x *PartyIdentificationEnrichmentAck) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_pie_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyIdentificationEnrichmentAck.ProtoReflect.Descriptor instead.
func (*PartyIdentificationEnrichmentAck) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_pie_proto_rawDescGZIP(), []int{3}
}

func (x *PartyIdentificationEnrichmentAck) GetPieAddress() string {
	if x != nil {
		return x.PieAddress
	}
	return ""
}

func (x *PartyIdentificationEnrichmentAck) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

var File_ddex_v1beta2_pie_proto protoreflect.FileDescriptor

var file_ddex_v1beta2_pie_proto_rawDesc = []byte{
	0x0a, 0x16, 0x64, 0x64, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2f, 0x70,
	0x69, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x1a, 0x19, 0x64, 0x64, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa2, 0x02, 0x0a, 0x1d, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x32, 0x2e, 0x44, 0x44, 0x45, 0x58, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x32, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x52, 0x08, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x4c, 0x0a, 0x06, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a, 0x08, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x59, 0x0a, 0x20,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x6b,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x75, 0x64, 0x69, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x75, 0x73, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x64, 0x64, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ddex_v1beta2_pie_proto_rawDescOnce sync.Once
	file_ddex_v1beta2_pie_proto_rawDescData = file_ddex_v1beta2_pie_proto_rawDesc
)

func file_ddex_v1beta2_pie_proto_rawDescGZIP() []byte {
	file_ddex_v1beta2_pie_proto_rawDescOnce.Do(func() {
		file_ddex_v1beta2_pie_proto_rawDescData = protoimpl.X.CompressGZIP(file_ddex_v1beta2_pie_proto_rawDescData)
	})
	return file_ddex_v1beta2_pie_proto_rawDescData
}

var file_ddex_v1beta2_pie_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ddex_v1beta2_pie_proto_goTypes = []interface{}{
	(*PartyIdentificationEnrichment)(nil),    // 0: ddex.v1beta2.PartyIdentificationEnrichment
	(*Handle)(nil),                           // 1: ddex.v1beta2.Handle
	(*Verified)(nil),                         // 2: ddex.v1beta2.Verified
	(*PartyIdentificationEnrichmentAck)(nil), // 3: ddex.v1beta2.PartyIdentificationEnrichmentAck
	(*DDEXMessageHeader)(nil),                // 4: ddex.v1beta2.DDEXMessageHeader
}
var file_ddex_v1beta2_pie_proto_depIdxs = []int32{
	4, // 0: ddex.v1beta2.PartyIdentificationEnrichment.header:type_name -> ddex.v1beta2.DDEXMessageHeader
	1, // 1: ddex.v1beta2.PartyIdentificationEnrichment.handle_list:type_name -> ddex.v1beta2.Handle
	2, // 2: ddex.v1beta2.PartyIdentificationEnrichment.verified:type_name -> ddex.v1beta2.Verified
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_ddex_v1beta2_pie_proto_init() }
func file_ddex_v1beta2_pie_proto_init() {
	if File_ddex_v1beta2_pie_proto != nil {
		return
	}
	file_ddex_v1beta2_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ddex_v1beta2_pie_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartyIdentificationEnrichment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_pie_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Handle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_pie_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Verified); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_pie_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartyIdentificationEnrichmentAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ddex_v1beta2_pie_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ddex_v1beta2_pie_proto_goTypes,
		DependencyIndexes: file_ddex_v1beta2_pie_proto_depIdxs,
		MessageInfos:      file_ddex_v1beta2_pie_proto_msgTypes,
	}.Build()
	File_ddex_v1beta2_pie_proto = out.File
	file_ddex_v1beta2_pie_proto_rawDesc = nil
	file_ddex_v1beta2_pie_proto_goTypes = nil
	file_ddex_v1beta2_pie_proto_depIdxs = nil
}
