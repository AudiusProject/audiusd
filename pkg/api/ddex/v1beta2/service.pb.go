// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: ddex/v1beta2/service.proto

package v1beta2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProcessingStatus_Status int32

const (
	ProcessingStatus_UNKNOWN          ProcessingStatus_Status = 0
	ProcessingStatus_SUCCESS          ProcessingStatus_Status = 1
	ProcessingStatus_PARTIAL_SUCCESS  ProcessingStatus_Status = 2
	ProcessingStatus_FAILED           ProcessingStatus_Status = 3
	ProcessingStatus_VALIDATION_ERROR ProcessingStatus_Status = 4
)

// Enum value maps for ProcessingStatus_Status.
var (
	ProcessingStatus_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "SUCCESS",
		2: "PARTIAL_SUCCESS",
		3: "FAILED",
		4: "VALIDATION_ERROR",
	}
	ProcessingStatus_Status_value = map[string]int32{
		"UNKNOWN":          0,
		"SUCCESS":          1,
		"PARTIAL_SUCCESS":  2,
		"FAILED":           3,
		"VALIDATION_ERROR": 4,
	}
)

func (x ProcessingStatus_Status) Enum() *ProcessingStatus_Status {
	p := new(ProcessingStatus_Status)
	*p = x
	return p
}

func (x ProcessingStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessingStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_ddex_v1beta2_service_proto_enumTypes[0].Descriptor()
}

func (ProcessingStatus_Status) Type() protoreflect.EnumType {
	return &file_ddex_v1beta2_service_proto_enumTypes[0]
}

func (x ProcessingStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessingStatus_Status.Descriptor instead.
func (ProcessingStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{3, 0}
}

type ValidationError_Severity int32

const (
	ValidationError_UNKNOWN_SEVERITY ValidationError_Severity = 0
	ValidationError_INFO             ValidationError_Severity = 1
	ValidationError_WARNING          ValidationError_Severity = 2
	ValidationError_ERROR            ValidationError_Severity = 3
	ValidationError_CRITICAL         ValidationError_Severity = 4
)

// Enum value maps for ValidationError_Severity.
var (
	ValidationError_Severity_name = map[int32]string{
		0: "UNKNOWN_SEVERITY",
		1: "INFO",
		2: "WARNING",
		3: "ERROR",
		4: "CRITICAL",
	}
	ValidationError_Severity_value = map[string]int32{
		"UNKNOWN_SEVERITY": 0,
		"INFO":             1,
		"WARNING":          2,
		"ERROR":            3,
		"CRITICAL":         4,
	}
)

func (x ValidationError_Severity) Enum() *ValidationError_Severity {
	p := new(ValidationError_Severity)
	*p = x
	return p
}

func (x ValidationError_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidationError_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_ddex_v1beta2_service_proto_enumTypes[1].Descriptor()
}

func (ValidationError_Severity) Type() protoreflect.EnumType {
	return &file_ddex_v1beta2_service_proto_enumTypes[1]
}

func (x ValidationError_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidationError_Severity.Descriptor instead.
func (ValidationError_Severity) EnumDescriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{4, 0}
}

// Request/Response messages
type ProcessNewReleaseMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *NewReleaseMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Options *ProcessingOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *ProcessNewReleaseMessageRequest) Reset() {
	*x = ProcessNewReleaseMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessNewReleaseMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessNewReleaseMessageRequest) ProtoMessage() {}

func (x *ProcessNewReleaseMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessNewReleaseMessageRequest.ProtoReflect.Descriptor instead.
func (*ProcessNewReleaseMessageRequest) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessNewReleaseMessageRequest) GetMessage() *NewReleaseMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ProcessNewReleaseMessageRequest) GetOptions() *ProcessingOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type ProcessNewReleaseMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId      string             `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Status             *ProcessingStatus  `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Errors             []*ValidationError `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	CreatedReleaseIds  []string           `protobuf:"bytes,4,rep,name=created_release_ids,json=createdReleaseIds,proto3" json:"created_release_ids,omitempty"`
	CreatedResourceIds []string           `protobuf:"bytes,5,rep,name=created_resource_ids,json=createdResourceIds,proto3" json:"created_resource_ids,omitempty"`
}

func (x *ProcessNewReleaseMessageResponse) Reset() {
	*x = ProcessNewReleaseMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessNewReleaseMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessNewReleaseMessageResponse) ProtoMessage() {}

func (x *ProcessNewReleaseMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessNewReleaseMessageResponse.ProtoReflect.Descriptor instead.
func (*ProcessNewReleaseMessageResponse) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessNewReleaseMessageResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ProcessNewReleaseMessageResponse) GetStatus() *ProcessingStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ProcessNewReleaseMessageResponse) GetErrors() []*ValidationError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ProcessNewReleaseMessageResponse) GetCreatedReleaseIds() []string {
	if x != nil {
		return x.CreatedReleaseIds
	}
	return nil
}

func (x *ProcessNewReleaseMessageResponse) GetCreatedResourceIds() []string {
	if x != nil {
		return x.CreatedResourceIds
	}
	return nil
}

type ProcessingOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidateOnly     bool   `protobuf:"varint,1,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	IgnoreDuplicates bool   `protobuf:"varint,2,opt,name=ignore_duplicates,json=ignoreDuplicates,proto3" json:"ignore_duplicates,omitempty"`
	Namespace        string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ProcessingOptions) Reset() {
	*x = ProcessingOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingOptions) ProtoMessage() {}

func (x *ProcessingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingOptions.ProtoReflect.Descriptor instead.
func (*ProcessingOptions) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessingOptions) GetValidateOnly() bool {
	if x != nil {
		return x.ValidateOnly
	}
	return false
}

func (x *ProcessingOptions) GetIgnoreDuplicates() bool {
	if x != nil {
		return x.IgnoreDuplicates
	}
	return false
}

func (x *ProcessingOptions) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ProcessingStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status             ProcessingStatus_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ddex.v1beta2.ProcessingStatus_Status" json:"status,omitempty"`
	Message            string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ProcessedReleases  int32                   `protobuf:"varint,3,opt,name=processed_releases,json=processedReleases,proto3" json:"processed_releases,omitempty"`
	ProcessedResources int32                   `protobuf:"varint,4,opt,name=processed_resources,json=processedResources,proto3" json:"processed_resources,omitempty"`
}

func (x *ProcessingStatus) Reset() {
	*x = ProcessingStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessingStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingStatus) ProtoMessage() {}

func (x *ProcessingStatus) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingStatus.ProtoReflect.Descriptor instead.
func (*ProcessingStatus) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessingStatus) GetStatus() ProcessingStatus_Status {
	if x != nil {
		return x.Status
	}
	return ProcessingStatus_UNKNOWN
}

func (x *ProcessingStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProcessingStatus) GetProcessedReleases() int32 {
	if x != nil {
		return x.ProcessedReleases
	}
	return 0
}

func (x *ProcessingStatus) GetProcessedResources() int32 {
	if x != nil {
		return x.ProcessedResources
	}
	return 0
}

type ValidationError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Severity   ValidationError_Severity `protobuf:"varint,1,opt,name=severity,proto3,enum=ddex.v1beta2.ValidationError_Severity" json:"severity,omitempty"`
	Code       string                   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Path       string                   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"` // JSON path to the problematic field
	Suggestion string                   `protobuf:"bytes,5,opt,name=suggestion,proto3" json:"suggestion,omitempty"`
}

func (x *ValidationError) Reset() {
	*x = ValidationError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError) ProtoMessage() {}

func (x *ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError.ProtoReflect.Descriptor instead.
func (*ValidationError) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{4}
}

func (x *ValidationError) GetSeverity() ValidationError_Severity {
	if x != nil {
		return x.Severity
	}
	return ValidationError_UNKNOWN_SEVERITY
}

func (x *ValidationError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ValidationError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidationError) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ValidationError) GetSuggestion() string {
	if x != nil {
		return x.Suggestion
	}
	return ""
}

type GetReleaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Identifier:
	//
	//	*GetReleaseRequest_ReleaseReference
	//	*GetReleaseRequest_Grid
	//	*GetReleaseRequest_Icpn
	//	*GetReleaseRequest_CatalogNumber
	Identifier isGetReleaseRequest_Identifier `protobuf_oneof:"identifier"`
	Namespace  string                         `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *GetReleaseRequest) Reset() {
	*x = GetReleaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReleaseRequest) ProtoMessage() {}

func (x *GetReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReleaseRequest.ProtoReflect.Descriptor instead.
func (*GetReleaseRequest) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{5}
}

func (m *GetReleaseRequest) GetIdentifier() isGetReleaseRequest_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (x *GetReleaseRequest) GetReleaseReference() string {
	if x, ok := x.GetIdentifier().(*GetReleaseRequest_ReleaseReference); ok {
		return x.ReleaseReference
	}
	return ""
}

func (x *GetReleaseRequest) GetGrid() string {
	if x, ok := x.GetIdentifier().(*GetReleaseRequest_Grid); ok {
		return x.Grid
	}
	return ""
}

func (x *GetReleaseRequest) GetIcpn() string {
	if x, ok := x.GetIdentifier().(*GetReleaseRequest_Icpn); ok {
		return x.Icpn
	}
	return ""
}

func (x *GetReleaseRequest) GetCatalogNumber() string {
	if x, ok := x.GetIdentifier().(*GetReleaseRequest_CatalogNumber); ok {
		return x.CatalogNumber
	}
	return ""
}

func (x *GetReleaseRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type isGetReleaseRequest_Identifier interface {
	isGetReleaseRequest_Identifier()
}

type GetReleaseRequest_ReleaseReference struct {
	ReleaseReference string `protobuf:"bytes,1,opt,name=release_reference,json=releaseReference,proto3,oneof"`
}

type GetReleaseRequest_Grid struct {
	Grid string `protobuf:"bytes,2,opt,name=grid,proto3,oneof"`
}

type GetReleaseRequest_Icpn struct {
	Icpn string `protobuf:"bytes,3,opt,name=icpn,proto3,oneof"`
}

type GetReleaseRequest_CatalogNumber struct {
	CatalogNumber string `protobuf:"bytes,4,opt,name=catalog_number,json=catalogNumber,proto3,oneof"`
}

func (*GetReleaseRequest_ReleaseReference) isGetReleaseRequest_Identifier() {}

func (*GetReleaseRequest_Grid) isGetReleaseRequest_Identifier() {}

func (*GetReleaseRequest_Icpn) isGetReleaseRequest_Identifier() {}

func (*GetReleaseRequest_CatalogNumber) isGetReleaseRequest_Identifier() {}

type GetReleaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Release             *Release          `protobuf:"bytes,1,opt,name=release,proto3" json:"release,omitempty"`
	AssociatedResources []*SoundRecording `protobuf:"bytes,2,rep,name=associated_resources,json=associatedResources,proto3" json:"associated_resources,omitempty"`
	AssociatedDeals     []*Deal           `protobuf:"bytes,3,rep,name=associated_deals,json=associatedDeals,proto3" json:"associated_deals,omitempty"`
}

func (x *GetReleaseResponse) Reset() {
	*x = GetReleaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReleaseResponse) ProtoMessage() {}

func (x *GetReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReleaseResponse.ProtoReflect.Descriptor instead.
func (*GetReleaseResponse) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetReleaseResponse) GetRelease() *Release {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *GetReleaseResponse) GetAssociatedResources() []*SoundRecording {
	if x != nil {
		return x.AssociatedResources
	}
	return nil
}

func (x *GetReleaseResponse) GetAssociatedDeals() []*Deal {
	if x != nil {
		return x.AssociatedDeals
	}
	return nil
}

type SearchReleasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query   string         `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Filters *SearchFilters `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	Limit   int32          `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  int32          `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy  []string       `protobuf:"bytes,5,rep,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *SearchReleasesRequest) Reset() {
	*x = SearchReleasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReleasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReleasesRequest) ProtoMessage() {}

func (x *SearchReleasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReleasesRequest.ProtoReflect.Descriptor instead.
func (*SearchReleasesRequest) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{7}
}

func (x *SearchReleasesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchReleasesRequest) GetFilters() *SearchFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SearchReleasesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchReleasesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchReleasesRequest) GetSortBy() []string {
	if x != nil {
		return x.SortBy
	}
	return nil
}

type SearchFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtistName       string     `protobuf:"bytes,1,opt,name=artist_name,json=artistName,proto3" json:"artist_name,omitempty"`
	ReleaseType      string     `protobuf:"bytes,2,opt,name=release_type,json=releaseType,proto3" json:"release_type,omitempty"`
	Genre            string     `protobuf:"bytes,3,opt,name=genre,proto3" json:"genre,omitempty"`
	ReleaseDateRange *DateRange `protobuf:"bytes,4,opt,name=release_date_range,json=releaseDateRange,proto3" json:"release_date_range,omitempty"`
	TerritoryCodes   []string   `protobuf:"bytes,5,rep,name=territory_codes,json=territoryCodes,proto3" json:"territory_codes,omitempty"`
	Label            string     `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *SearchFilters) Reset() {
	*x = SearchFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFilters) ProtoMessage() {}

func (x *SearchFilters) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFilters.ProtoReflect.Descriptor instead.
func (*SearchFilters) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{8}
}

func (x *SearchFilters) GetArtistName() string {
	if x != nil {
		return x.ArtistName
	}
	return ""
}

func (x *SearchFilters) GetReleaseType() string {
	if x != nil {
		return x.ReleaseType
	}
	return ""
}

func (x *SearchFilters) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *SearchFilters) GetReleaseDateRange() *DateRange {
	if x != nil {
		return x.ReleaseDateRange
	}
	return nil
}

func (x *SearchFilters) GetTerritoryCodes() []string {
	if x != nil {
		return x.TerritoryCodes
	}
	return nil
}

func (x *SearchFilters) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type DateRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDate string `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` // ISO date format
	EndDate   string `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`       // ISO date format
}

func (x *DateRange) Reset() {
	*x = DateRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateRange) ProtoMessage() {}

func (x *DateRange) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateRange.ProtoReflect.Descriptor instead.
func (*DateRange) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{9}
}

func (x *DateRange) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *DateRange) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type SearchReleasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*ReleaseSearchResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Offset     int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit      int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *SearchReleasesResponse) Reset() {
	*x = SearchReleasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReleasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReleasesResponse) ProtoMessage() {}

func (x *SearchReleasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReleasesResponse.ProtoReflect.Descriptor instead.
func (*SearchReleasesResponse) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{10}
}

func (x *SearchReleasesResponse) GetResults() []*ReleaseSearchResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SearchReleasesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *SearchReleasesResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchReleasesResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ReleaseSearchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Release        *Release `protobuf:"bytes,1,opt,name=release,proto3" json:"release,omitempty"`
	RelevanceScore float64  `protobuf:"fixed64,2,opt,name=relevance_score,json=relevanceScore,proto3" json:"relevance_score,omitempty"`
	MatchedFields  []string `protobuf:"bytes,3,rep,name=matched_fields,json=matchedFields,proto3" json:"matched_fields,omitempty"`
}

func (x *ReleaseSearchResult) Reset() {
	*x = ReleaseSearchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseSearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseSearchResult) ProtoMessage() {}

func (x *ReleaseSearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseSearchResult.ProtoReflect.Descriptor instead.
func (*ReleaseSearchResult) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{11}
}

func (x *ReleaseSearchResult) GetRelease() *Release {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *ReleaseSearchResult) GetRelevanceScore() float64 {
	if x != nil {
		return x.RelevanceScore
	}
	return 0
}

func (x *ReleaseSearchResult) GetMatchedFields() []string {
	if x != nil {
		return x.MatchedFields
	}
	return nil
}

type GetSoundRecordingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Identifier:
	//
	//	*GetSoundRecordingRequest_ResourceReference
	//	*GetSoundRecordingRequest_Isrc
	Identifier isGetSoundRecordingRequest_Identifier `protobuf_oneof:"identifier"`
	Namespace  string                                `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *GetSoundRecordingRequest) Reset() {
	*x = GetSoundRecordingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSoundRecordingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSoundRecordingRequest) ProtoMessage() {}

func (x *GetSoundRecordingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSoundRecordingRequest.ProtoReflect.Descriptor instead.
func (*GetSoundRecordingRequest) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{12}
}

func (m *GetSoundRecordingRequest) GetIdentifier() isGetSoundRecordingRequest_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (x *GetSoundRecordingRequest) GetResourceReference() string {
	if x, ok := x.GetIdentifier().(*GetSoundRecordingRequest_ResourceReference); ok {
		return x.ResourceReference
	}
	return ""
}

func (x *GetSoundRecordingRequest) GetIsrc() string {
	if x, ok := x.GetIdentifier().(*GetSoundRecordingRequest_Isrc); ok {
		return x.Isrc
	}
	return ""
}

func (x *GetSoundRecordingRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type isGetSoundRecordingRequest_Identifier interface {
	isGetSoundRecordingRequest_Identifier()
}

type GetSoundRecordingRequest_ResourceReference struct {
	ResourceReference string `protobuf:"bytes,1,opt,name=resource_reference,json=resourceReference,proto3,oneof"`
}

type GetSoundRecordingRequest_Isrc struct {
	Isrc string `protobuf:"bytes,2,opt,name=isrc,proto3,oneof"`
}

func (*GetSoundRecordingRequest_ResourceReference) isGetSoundRecordingRequest_Identifier() {}

func (*GetSoundRecordingRequest_Isrc) isGetSoundRecordingRequest_Identifier() {}

type GetSoundRecordingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoundRecording     *SoundRecording `protobuf:"bytes,1,opt,name=sound_recording,json=soundRecording,proto3" json:"sound_recording,omitempty"`
	AssociatedReleases []*Release      `protobuf:"bytes,2,rep,name=associated_releases,json=associatedReleases,proto3" json:"associated_releases,omitempty"`
}

func (x *GetSoundRecordingResponse) Reset() {
	*x = GetSoundRecordingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSoundRecordingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSoundRecordingResponse) ProtoMessage() {}

func (x *GetSoundRecordingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSoundRecordingResponse.ProtoReflect.Descriptor instead.
func (*GetSoundRecordingResponse) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetSoundRecordingResponse) GetSoundRecording() *SoundRecording {
	if x != nil {
		return x.SoundRecording
	}
	return nil
}

func (x *GetSoundRecordingResponse) GetAssociatedReleases() []*Release {
	if x != nil {
		return x.AssociatedReleases
	}
	return nil
}

type ValidateMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *NewReleaseMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Options *ValidationOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *ValidateMessageRequest) Reset() {
	*x = ValidateMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateMessageRequest) ProtoMessage() {}

func (x *ValidateMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateMessageRequest.ProtoReflect.Descriptor instead.
func (*ValidateMessageRequest) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{14}
}

func (x *ValidateMessageRequest) GetMessage() *NewReleaseMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ValidateMessageRequest) GetOptions() *ValidationOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type ValidationOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StrictMode          bool     `protobuf:"varint,1,opt,name=strict_mode,json=strictMode,proto3" json:"strict_mode,omitempty"`
	SkipValidationRules []string `protobuf:"bytes,2,rep,name=skip_validation_rules,json=skipValidationRules,proto3" json:"skip_validation_rules,omitempty"`
	SchemaVersion       string   `protobuf:"bytes,3,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
}

func (x *ValidationOptions) Reset() {
	*x = ValidationOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidationOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationOptions) ProtoMessage() {}

func (x *ValidationOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationOptions.ProtoReflect.Descriptor instead.
func (*ValidationOptions) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{15}
}

func (x *ValidationOptions) GetStrictMode() bool {
	if x != nil {
		return x.StrictMode
	}
	return false
}

func (x *ValidationOptions) GetSkipValidationRules() []string {
	if x != nil {
		return x.SkipValidationRules
	}
	return nil
}

func (x *ValidationOptions) GetSchemaVersion() string {
	if x != nil {
		return x.SchemaVersion
	}
	return ""
}

type ValidateMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid  bool               `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Errors   []*ValidationError `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	Warnings []*ValidationError `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Summary  *ValidationSummary `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *ValidateMessageResponse) Reset() {
	*x = ValidateMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateMessageResponse) ProtoMessage() {}

func (x *ValidateMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateMessageResponse.ProtoReflect.Descriptor instead.
func (*ValidateMessageResponse) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{16}
}

func (x *ValidateMessageResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *ValidateMessageResponse) GetErrors() []*ValidationError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ValidateMessageResponse) GetWarnings() []*ValidationError {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *ValidateMessageResponse) GetSummary() *ValidationSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

type ValidationSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalErrors             int32 `protobuf:"varint,1,opt,name=total_errors,json=totalErrors,proto3" json:"total_errors,omitempty"`
	TotalWarnings           int32 `protobuf:"varint,2,opt,name=total_warnings,json=totalWarnings,proto3" json:"total_warnings,omitempty"`
	TotalResourcesValidated int32 `protobuf:"varint,3,opt,name=total_resources_validated,json=totalResourcesValidated,proto3" json:"total_resources_validated,omitempty"`
	TotalReleasesValidated  int32 `protobuf:"varint,4,opt,name=total_releases_validated,json=totalReleasesValidated,proto3" json:"total_releases_validated,omitempty"`
	TotalDealsValidated     int32 `protobuf:"varint,5,opt,name=total_deals_validated,json=totalDealsValidated,proto3" json:"total_deals_validated,omitempty"`
}

func (x *ValidationSummary) Reset() {
	*x = ValidationSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidationSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationSummary) ProtoMessage() {}

func (x *ValidationSummary) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationSummary.ProtoReflect.Descriptor instead.
func (*ValidationSummary) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_service_proto_rawDescGZIP(), []int{17}
}

func (x *ValidationSummary) GetTotalErrors() int32 {
	if x != nil {
		return x.TotalErrors
	}
	return 0
}

func (x *ValidationSummary) GetTotalWarnings() int32 {
	if x != nil {
		return x.TotalWarnings
	}
	return 0
}

func (x *ValidationSummary) GetTotalResourcesValidated() int32 {
	if x != nil {
		return x.TotalResourcesValidated
	}
	return 0
}

func (x *ValidationSummary) GetTotalReleasesValidated() int32 {
	if x != nil {
		return x.TotalReleasesValidated
	}
	return 0
}

func (x *ValidationSummary) GetTotalDealsValidated() int32 {
	if x != nil {
		return x.TotalDealsValidated
	}
	return 0
}

var File_ddex_v1beta2_service_proto protoreflect.FileDescriptor

var file_ddex_v1beta2_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x64, 0x64, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x64, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x1a, 0x16, 0x64, 0x64, 0x65, 0x78,
	0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2f, 0x65, 0x72, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x97, 0x01, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x65,
	0x77, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x39, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9a, 0x02, 0x0a,
	0x20, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x35, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x11, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x64,
	0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22,
	0xa6, 0x02, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a,
	0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x13,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x59, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x22, 0x89, 0x02, 0x0a, 0x0f, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x08,
	0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26,
	0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x53, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x50, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x10, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49,
	0x54, 0x59, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43,
	0x41, 0x4c, 0x10, 0x04, 0x22, 0xc3, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x11, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x67, 0x72, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x67, 0x72, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x04, 0x69, 0x63, 0x70, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x69, 0x63, 0x70, 0x6e, 0x12, 0x27, 0x0a, 0x0e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0d, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x0c, 0x0a, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xd5, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x32, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x12, 0x4f, 0x0a, 0x14, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e,
	0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x13,
	0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x10, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x64, 0x65, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x44, 0x65, 0x61,
	0x6c, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x44, 0x65, 0x61,
	0x6c, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x35, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x32, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f,
	0x62, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79,
	0x22, 0xef, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x45, 0x0a, 0x12,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x10, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x65,
	0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x22, 0x45, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x16, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x96, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x64, 0x65, 0x78,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x52, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6c,
	0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x69, 0x73, 0x72, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x69, 0x73, 0x72, 0x63, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xaa, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e,
	0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0e,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x46,
	0x0a, 0x13, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x12, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x16, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x39, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x32, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x32,
	0x0a, 0x15, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x73,
	0x6b, 0x69, 0x70, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xe1, 0x01, 0x0a, 0x17, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x12, 0x35, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x64, 0x65, 0x78,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x39, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x87, 0x02,
	0x0a, 0x11, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3a, 0x0a,
	0x19, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x61,
	0x6c, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x32, 0xfc, 0x03, 0x0a, 0x0b, 0x44, 0x44, 0x45, 0x58,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x79, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2d, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x12, 0x1f, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x32, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x64, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x64, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x2e, 0x64, 0x64, 0x65, 0x78,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x75, 0x64, 0x69, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x75, 0x73, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x64, 0x64, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ddex_v1beta2_service_proto_rawDescOnce sync.Once
	file_ddex_v1beta2_service_proto_rawDescData = file_ddex_v1beta2_service_proto_rawDesc
)

func file_ddex_v1beta2_service_proto_rawDescGZIP() []byte {
	file_ddex_v1beta2_service_proto_rawDescOnce.Do(func() {
		file_ddex_v1beta2_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_ddex_v1beta2_service_proto_rawDescData)
	})
	return file_ddex_v1beta2_service_proto_rawDescData
}

var file_ddex_v1beta2_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ddex_v1beta2_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_ddex_v1beta2_service_proto_goTypes = []interface{}{
	(ProcessingStatus_Status)(0),             // 0: ddex.v1beta2.ProcessingStatus.Status
	(ValidationError_Severity)(0),            // 1: ddex.v1beta2.ValidationError.Severity
	(*ProcessNewReleaseMessageRequest)(nil),  // 2: ddex.v1beta2.ProcessNewReleaseMessageRequest
	(*ProcessNewReleaseMessageResponse)(nil), // 3: ddex.v1beta2.ProcessNewReleaseMessageResponse
	(*ProcessingOptions)(nil),                // 4: ddex.v1beta2.ProcessingOptions
	(*ProcessingStatus)(nil),                 // 5: ddex.v1beta2.ProcessingStatus
	(*ValidationError)(nil),                  // 6: ddex.v1beta2.ValidationError
	(*GetReleaseRequest)(nil),                // 7: ddex.v1beta2.GetReleaseRequest
	(*GetReleaseResponse)(nil),               // 8: ddex.v1beta2.GetReleaseResponse
	(*SearchReleasesRequest)(nil),            // 9: ddex.v1beta2.SearchReleasesRequest
	(*SearchFilters)(nil),                    // 10: ddex.v1beta2.SearchFilters
	(*DateRange)(nil),                        // 11: ddex.v1beta2.DateRange
	(*SearchReleasesResponse)(nil),           // 12: ddex.v1beta2.SearchReleasesResponse
	(*ReleaseSearchResult)(nil),              // 13: ddex.v1beta2.ReleaseSearchResult
	(*GetSoundRecordingRequest)(nil),         // 14: ddex.v1beta2.GetSoundRecordingRequest
	(*GetSoundRecordingResponse)(nil),        // 15: ddex.v1beta2.GetSoundRecordingResponse
	(*ValidateMessageRequest)(nil),           // 16: ddex.v1beta2.ValidateMessageRequest
	(*ValidationOptions)(nil),                // 17: ddex.v1beta2.ValidationOptions
	(*ValidateMessageResponse)(nil),          // 18: ddex.v1beta2.ValidateMessageResponse
	(*ValidationSummary)(nil),                // 19: ddex.v1beta2.ValidationSummary
	(*NewReleaseMessage)(nil),                // 20: ddex.v1beta2.NewReleaseMessage
	(*Release)(nil),                          // 21: ddex.v1beta2.Release
	(*SoundRecording)(nil),                   // 22: ddex.v1beta2.SoundRecording
	(*Deal)(nil),                             // 23: ddex.v1beta2.Deal
}
var file_ddex_v1beta2_service_proto_depIdxs = []int32{
	20, // 0: ddex.v1beta2.ProcessNewReleaseMessageRequest.message:type_name -> ddex.v1beta2.NewReleaseMessage
	4,  // 1: ddex.v1beta2.ProcessNewReleaseMessageRequest.options:type_name -> ddex.v1beta2.ProcessingOptions
	5,  // 2: ddex.v1beta2.ProcessNewReleaseMessageResponse.status:type_name -> ddex.v1beta2.ProcessingStatus
	6,  // 3: ddex.v1beta2.ProcessNewReleaseMessageResponse.errors:type_name -> ddex.v1beta2.ValidationError
	0,  // 4: ddex.v1beta2.ProcessingStatus.status:type_name -> ddex.v1beta2.ProcessingStatus.Status
	1,  // 5: ddex.v1beta2.ValidationError.severity:type_name -> ddex.v1beta2.ValidationError.Severity
	21, // 6: ddex.v1beta2.GetReleaseResponse.release:type_name -> ddex.v1beta2.Release
	22, // 7: ddex.v1beta2.GetReleaseResponse.associated_resources:type_name -> ddex.v1beta2.SoundRecording
	23, // 8: ddex.v1beta2.GetReleaseResponse.associated_deals:type_name -> ddex.v1beta2.Deal
	10, // 9: ddex.v1beta2.SearchReleasesRequest.filters:type_name -> ddex.v1beta2.SearchFilters
	11, // 10: ddex.v1beta2.SearchFilters.release_date_range:type_name -> ddex.v1beta2.DateRange
	13, // 11: ddex.v1beta2.SearchReleasesResponse.results:type_name -> ddex.v1beta2.ReleaseSearchResult
	21, // 12: ddex.v1beta2.ReleaseSearchResult.release:type_name -> ddex.v1beta2.Release
	22, // 13: ddex.v1beta2.GetSoundRecordingResponse.sound_recording:type_name -> ddex.v1beta2.SoundRecording
	21, // 14: ddex.v1beta2.GetSoundRecordingResponse.associated_releases:type_name -> ddex.v1beta2.Release
	20, // 15: ddex.v1beta2.ValidateMessageRequest.message:type_name -> ddex.v1beta2.NewReleaseMessage
	17, // 16: ddex.v1beta2.ValidateMessageRequest.options:type_name -> ddex.v1beta2.ValidationOptions
	6,  // 17: ddex.v1beta2.ValidateMessageResponse.errors:type_name -> ddex.v1beta2.ValidationError
	6,  // 18: ddex.v1beta2.ValidateMessageResponse.warnings:type_name -> ddex.v1beta2.ValidationError
	19, // 19: ddex.v1beta2.ValidateMessageResponse.summary:type_name -> ddex.v1beta2.ValidationSummary
	2,  // 20: ddex.v1beta2.DDEXService.ProcessNewReleaseMessage:input_type -> ddex.v1beta2.ProcessNewReleaseMessageRequest
	7,  // 21: ddex.v1beta2.DDEXService.GetRelease:input_type -> ddex.v1beta2.GetReleaseRequest
	9,  // 22: ddex.v1beta2.DDEXService.SearchReleases:input_type -> ddex.v1beta2.SearchReleasesRequest
	14, // 23: ddex.v1beta2.DDEXService.GetSoundRecording:input_type -> ddex.v1beta2.GetSoundRecordingRequest
	16, // 24: ddex.v1beta2.DDEXService.ValidateMessage:input_type -> ddex.v1beta2.ValidateMessageRequest
	3,  // 25: ddex.v1beta2.DDEXService.ProcessNewReleaseMessage:output_type -> ddex.v1beta2.ProcessNewReleaseMessageResponse
	8,  // 26: ddex.v1beta2.DDEXService.GetRelease:output_type -> ddex.v1beta2.GetReleaseResponse
	12, // 27: ddex.v1beta2.DDEXService.SearchReleases:output_type -> ddex.v1beta2.SearchReleasesResponse
	15, // 28: ddex.v1beta2.DDEXService.GetSoundRecording:output_type -> ddex.v1beta2.GetSoundRecordingResponse
	18, // 29: ddex.v1beta2.DDEXService.ValidateMessage:output_type -> ddex.v1beta2.ValidateMessageResponse
	25, // [25:30] is the sub-list for method output_type
	20, // [20:25] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_ddex_v1beta2_service_proto_init() }
func file_ddex_v1beta2_service_proto_init() {
	if File_ddex_v1beta2_service_proto != nil {
		return
	}
	file_ddex_v1beta2_ern_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ddex_v1beta2_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessNewReleaseMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessNewReleaseMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessingOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessingStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidationError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReleaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReleaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReleasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReleasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseSearchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSoundRecordingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSoundRecordingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidationOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidationSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ddex_v1beta2_service_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*GetReleaseRequest_ReleaseReference)(nil),
		(*GetReleaseRequest_Grid)(nil),
		(*GetReleaseRequest_Icpn)(nil),
		(*GetReleaseRequest_CatalogNumber)(nil),
	}
	file_ddex_v1beta2_service_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*GetSoundRecordingRequest_ResourceReference)(nil),
		(*GetSoundRecordingRequest_Isrc)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ddex_v1beta2_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ddex_v1beta2_service_proto_goTypes,
		DependencyIndexes: file_ddex_v1beta2_service_proto_depIdxs,
		EnumInfos:         file_ddex_v1beta2_service_proto_enumTypes,
		MessageInfos:      file_ddex_v1beta2_service_proto_msgTypes,
	}.Build()
	File_ddex_v1beta2_service_proto = out.File
	file_ddex_v1beta2_service_proto_rawDesc = nil
	file_ddex_v1beta2_service_proto_goTypes = nil
	file_ddex_v1beta2_service_proto_depIdxs = nil
}
