// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: ddex/v1beta2/ern.proto

package v1beta2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message control types for ERN operations
type MessageControlType int32

const (
	MessageControlType_MESSAGE_CONTROL_TYPE_UNSPECIFIED              MessageControlType = 0
	MessageControlType_MESSAGE_CONTROL_TYPE_NEW_RELEASE_MESSAGE      MessageControlType = 1
	MessageControlType_MESSAGE_CONTROL_TYPE_UPDATED_RELEASE_MESSAGE  MessageControlType = 2
	MessageControlType_MESSAGE_CONTROL_TYPE_TAKEDOWN_RELEASE_MESSAGE MessageControlType = 3
)

// Enum value maps for MessageControlType.
var (
	MessageControlType_name = map[int32]string{
		0: "MESSAGE_CONTROL_TYPE_UNSPECIFIED",
		1: "MESSAGE_CONTROL_TYPE_NEW_RELEASE_MESSAGE",
		2: "MESSAGE_CONTROL_TYPE_UPDATED_RELEASE_MESSAGE",
		3: "MESSAGE_CONTROL_TYPE_TAKEDOWN_RELEASE_MESSAGE",
	}
	MessageControlType_value = map[string]int32{
		"MESSAGE_CONTROL_TYPE_UNSPECIFIED":              0,
		"MESSAGE_CONTROL_TYPE_NEW_RELEASE_MESSAGE":      1,
		"MESSAGE_CONTROL_TYPE_UPDATED_RELEASE_MESSAGE":  2,
		"MESSAGE_CONTROL_TYPE_TAKEDOWN_RELEASE_MESSAGE": 3,
	}
)

func (x MessageControlType) Enum() *MessageControlType {
	p := new(MessageControlType)
	*p = x
	return p
}

func (x MessageControlType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageControlType) Descriptor() protoreflect.EnumDescriptor {
	return file_ddex_v1beta2_ern_proto_enumTypes[0].Descriptor()
}

func (MessageControlType) Type() protoreflect.EnumType {
	return &file_ddex_v1beta2_ern_proto_enumTypes[0]
}

func (x MessageControlType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageControlType.Descriptor instead.
func (MessageControlType) EnumDescriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{0}
}

// Root message for Electronic Release Notification
type NewReleaseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvsVersionId          string            `protobuf:"bytes,1,opt,name=avs_version_id,json=avsVersionId,proto3" json:"avs_version_id,omitempty"`
	LanguageAndScriptCode string            `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty"`
	MessageHeader         *MessageHeader    `protobuf:"bytes,3,opt,name=message_header,json=messageHeader,proto3" json:"message_header,omitempty"`
	PartyList             []*Party          `protobuf:"bytes,4,rep,name=party_list,json=partyList,proto3" json:"party_list,omitempty"`
	ResourceList          []*SoundRecording `protobuf:"bytes,5,rep,name=resource_list,json=resourceList,proto3" json:"resource_list,omitempty"`
	ReleaseList           []*Release        `protobuf:"bytes,6,rep,name=release_list,json=releaseList,proto3" json:"release_list,omitempty"`
	DealList              *DealList         `protobuf:"bytes,7,opt,name=deal_list,json=dealList,proto3" json:"deal_list,omitempty"`
}

func (x *NewReleaseMessage) Reset() {
	*x = NewReleaseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewReleaseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewReleaseMessage) ProtoMessage() {}

func (x *NewReleaseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewReleaseMessage.ProtoReflect.Descriptor instead.
func (*NewReleaseMessage) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{0}
}

func (x *NewReleaseMessage) GetAvsVersionId() string {
	if x != nil {
		return x.AvsVersionId
	}
	return ""
}

func (x *NewReleaseMessage) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *NewReleaseMessage) GetMessageHeader() *MessageHeader {
	if x != nil {
		return x.MessageHeader
	}
	return nil
}

func (x *NewReleaseMessage) GetPartyList() []*Party {
	if x != nil {
		return x.PartyList
	}
	return nil
}

func (x *NewReleaseMessage) GetResourceList() []*SoundRecording {
	if x != nil {
		return x.ResourceList
	}
	return nil
}

func (x *NewReleaseMessage) GetReleaseList() []*Release {
	if x != nil {
		return x.ReleaseList
	}
	return nil
}

func (x *NewReleaseMessage) GetDealList() *DealList {
	if x != nil {
		return x.DealList
	}
	return nil
}

// Message header information
type MessageHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageThreadId        string             `protobuf:"bytes,1,opt,name=message_thread_id,json=messageThreadId,proto3" json:"message_thread_id,omitempty"`
	MessageId              string             `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	MessageSender          *MessageSender     `protobuf:"bytes,3,opt,name=message_sender,json=messageSender,proto3" json:"message_sender,omitempty"`
	MessageRecipient       *MessageRecipient  `protobuf:"bytes,4,opt,name=message_recipient,json=messageRecipient,proto3" json:"message_recipient,omitempty"`
	MessageCreatedDateTime string             `protobuf:"bytes,5,opt,name=message_created_date_time,json=messageCreatedDateTime,proto3" json:"message_created_date_time,omitempty"`
	MessageControlType     MessageControlType `protobuf:"varint,6,opt,name=message_control_type,json=messageControlType,proto3,enum=ddex.v1beta2.MessageControlType" json:"message_control_type,omitempty"`
}

func (x *MessageHeader) Reset() {
	*x = MessageHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageHeader) ProtoMessage() {}

func (x *MessageHeader) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageHeader.ProtoReflect.Descriptor instead.
func (*MessageHeader) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{1}
}

func (x *MessageHeader) GetMessageThreadId() string {
	if x != nil {
		return x.MessageThreadId
	}
	return ""
}

func (x *MessageHeader) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageHeader) GetMessageSender() *MessageSender {
	if x != nil {
		return x.MessageSender
	}
	return nil
}

func (x *MessageHeader) GetMessageRecipient() *MessageRecipient {
	if x != nil {
		return x.MessageRecipient
	}
	return nil
}

func (x *MessageHeader) GetMessageCreatedDateTime() string {
	if x != nil {
		return x.MessageCreatedDateTime
	}
	return ""
}

func (x *MessageHeader) GetMessageControlType() MessageControlType {
	if x != nil {
		return x.MessageControlType
	}
	return MessageControlType_MESSAGE_CONTROL_TYPE_UNSPECIFIED
}

type MessageSender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId   string     `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	PartyName *PartyName `protobuf:"bytes,2,opt,name=party_name,json=partyName,proto3" json:"party_name,omitempty"`
}

func (x *MessageSender) Reset() {
	*x = MessageSender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSender) ProtoMessage() {}

func (x *MessageSender) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSender.ProtoReflect.Descriptor instead.
func (*MessageSender) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{2}
}

func (x *MessageSender) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

func (x *MessageSender) GetPartyName() *PartyName {
	if x != nil {
		return x.PartyName
	}
	return nil
}

type MessageRecipient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId   string     `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	PartyName *PartyName `protobuf:"bytes,2,opt,name=party_name,json=partyName,proto3" json:"party_name,omitempty"`
}

func (x *MessageRecipient) Reset() {
	*x = MessageRecipient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageRecipient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRecipient) ProtoMessage() {}

func (x *MessageRecipient) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRecipient.ProtoReflect.Descriptor instead.
func (*MessageRecipient) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{3}
}

func (x *MessageRecipient) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

func (x *MessageRecipient) GetPartyName() *PartyName {
	if x != nil {
		return x.PartyName
	}
	return nil
}

// Party information (artists, labels, etc.)
type Party struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyReference string       `protobuf:"bytes,1,opt,name=party_reference,json=partyReference,proto3" json:"party_reference,omitempty"`
	PartyName      []*PartyName `protobuf:"bytes,2,rep,name=party_name,json=partyName,proto3" json:"party_name,omitempty"`
	PartyId        *PartyId     `protobuf:"bytes,3,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
}

func (x *Party) Reset() {
	*x = Party{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Party) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Party) ProtoMessage() {}

func (x *Party) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Party.ProtoReflect.Descriptor instead.
func (*Party) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{4}
}

func (x *Party) GetPartyReference() string {
	if x != nil {
		return x.PartyReference
	}
	return ""
}

func (x *Party) GetPartyName() []*PartyName {
	if x != nil {
		return x.PartyName
	}
	return nil
}

func (x *Party) GetPartyId() *PartyId {
	if x != nil {
		return x.PartyId
	}
	return nil
}

type PartyName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageAndScriptCode string `protobuf:"bytes,1,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty"`
	FullName              string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
}

func (x *PartyName) Reset() {
	*x = PartyName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyName) ProtoMessage() {}

func (x *PartyName) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyName.ProtoReflect.Descriptor instead.
func (*PartyName) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{5}
}

func (x *PartyName) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *PartyName) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

type PartyId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dpid    string `protobuf:"bytes,1,opt,name=dpid,proto3" json:"dpid,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *PartyId) Reset() {
	*x = PartyId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyId) ProtoMessage() {}

func (x *PartyId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyId.ProtoReflect.Descriptor instead.
func (*PartyId) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{6}
}

func (x *PartyId) GetDpid() string {
	if x != nil {
		return x.Dpid
	}
	return ""
}

func (x *PartyId) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Sound recording (track) information
type SoundRecording struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceReference     string                 `protobuf:"bytes,1,opt,name=resource_reference,json=resourceReference,proto3" json:"resource_reference,omitempty"`
	Type                  string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	SoundRecordingEdition *SoundRecordingEdition `protobuf:"bytes,3,opt,name=sound_recording_edition,json=soundRecordingEdition,proto3" json:"sound_recording_edition,omitempty"`
	DisplayTitleText      string                 `protobuf:"bytes,4,opt,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty"`
	LanguageAndScriptCode string                 `protobuf:"bytes,5,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty"`
	DisplayTitle          *DisplayTitle          `protobuf:"bytes,6,opt,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty"`
	VersionType           string                 `protobuf:"bytes,7,opt,name=version_type,json=versionType,proto3" json:"version_type,omitempty"`
	DisplayArtistName     string                 `protobuf:"bytes,8,opt,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty"`
	DisplayArtist         []*DisplayArtist       `protobuf:"bytes,9,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty"`
	Contributor           []*Contributor         `protobuf:"bytes,10,rep,name=contributor,proto3" json:"contributor,omitempty"`
	Duration              string                 `protobuf:"bytes,11,opt,name=duration,proto3" json:"duration,omitempty"`
	FirstPublicationDate  string                 `protobuf:"bytes,12,opt,name=first_publication_date,json=firstPublicationDate,proto3" json:"first_publication_date,omitempty"`
	ParentalWarningType   string                 `protobuf:"bytes,13,opt,name=parental_warning_type,json=parentalWarningType,proto3" json:"parental_warning_type,omitempty"`
	LanguageOfPerformance string                 `protobuf:"bytes,14,opt,name=language_of_performance,json=languageOfPerformance,proto3" json:"language_of_performance,omitempty"`
}

func (x *SoundRecording) Reset() {
	*x = SoundRecording{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoundRecording) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundRecording) ProtoMessage() {}

func (x *SoundRecording) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundRecording.ProtoReflect.Descriptor instead.
func (*SoundRecording) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{7}
}

func (x *SoundRecording) GetResourceReference() string {
	if x != nil {
		return x.ResourceReference
	}
	return ""
}

func (x *SoundRecording) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SoundRecording) GetSoundRecordingEdition() *SoundRecordingEdition {
	if x != nil {
		return x.SoundRecordingEdition
	}
	return nil
}

func (x *SoundRecording) GetDisplayTitleText() string {
	if x != nil {
		return x.DisplayTitleText
	}
	return ""
}

func (x *SoundRecording) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *SoundRecording) GetDisplayTitle() *DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *SoundRecording) GetVersionType() string {
	if x != nil {
		return x.VersionType
	}
	return ""
}

func (x *SoundRecording) GetDisplayArtistName() string {
	if x != nil {
		return x.DisplayArtistName
	}
	return ""
}

func (x *SoundRecording) GetDisplayArtist() []*DisplayArtist {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

func (x *SoundRecording) GetContributor() []*Contributor {
	if x != nil {
		return x.Contributor
	}
	return nil
}

func (x *SoundRecording) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *SoundRecording) GetFirstPublicationDate() string {
	if x != nil {
		return x.FirstPublicationDate
	}
	return ""
}

func (x *SoundRecording) GetParentalWarningType() string {
	if x != nil {
		return x.ParentalWarningType
	}
	return ""
}

func (x *SoundRecording) GetLanguageOfPerformance() string {
	if x != nil {
		return x.LanguageOfPerformance
	}
	return ""
}

type SoundRecordingEdition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ResourceId       *ResourceId       `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	PLine            *PLine            `protobuf:"bytes,3,opt,name=p_line,json=pLine,proto3" json:"p_line,omitempty"`
	TechnicalDetails *TechnicalDetails `protobuf:"bytes,4,opt,name=technical_details,json=technicalDetails,proto3" json:"technical_details,omitempty"`
}

func (x *SoundRecordingEdition) Reset() {
	*x = SoundRecordingEdition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoundRecordingEdition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundRecordingEdition) ProtoMessage() {}

func (x *SoundRecordingEdition) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundRecordingEdition.ProtoReflect.Descriptor instead.
func (*SoundRecordingEdition) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{8}
}

func (x *SoundRecordingEdition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SoundRecordingEdition) GetResourceId() *ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *SoundRecordingEdition) GetPLine() *PLine {
	if x != nil {
		return x.PLine
	}
	return nil
}

func (x *SoundRecordingEdition) GetTechnicalDetails() *TechnicalDetails {
	if x != nil {
		return x.TechnicalDetails
	}
	return nil
}

type ResourceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Isrc string `protobuf:"bytes,1,opt,name=isrc,proto3" json:"isrc,omitempty"`
}

func (x *ResourceId) Reset() {
	*x = ResourceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceId) ProtoMessage() {}

func (x *ResourceId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceId.ProtoReflect.Descriptor instead.
func (*ResourceId) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{9}
}

func (x *ResourceId) GetIsrc() string {
	if x != nil {
		return x.Isrc
	}
	return ""
}

type PLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year      int32  `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	PLineText string `protobuf:"bytes,2,opt,name=p_line_text,json=pLineText,proto3" json:"p_line_text,omitempty"`
}

func (x *PLine) Reset() {
	*x = PLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PLine) ProtoMessage() {}

func (x *PLine) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PLine.ProtoReflect.Descriptor instead.
func (*PLine) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{10}
}

func (x *PLine) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *PLine) GetPLineText() string {
	if x != nil {
		return x.PLineText
	}
	return ""
}

type TechnicalDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TechnicalResourceDetailsReference string        `protobuf:"bytes,1,opt,name=technical_resource_details_reference,json=technicalResourceDetailsReference,proto3" json:"technical_resource_details_reference,omitempty"`
	DeliveryFile                      *DeliveryFile `protobuf:"bytes,2,opt,name=delivery_file,json=deliveryFile,proto3" json:"delivery_file,omitempty"`
	IsClip                            bool          `protobuf:"varint,3,opt,name=is_clip,json=isClip,proto3" json:"is_clip,omitempty"`
	ClipDetails                       *ClipDetails  `protobuf:"bytes,4,opt,name=clip_details,json=clipDetails,proto3" json:"clip_details,omitempty"`
}

func (x *TechnicalDetails) Reset() {
	*x = TechnicalDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TechnicalDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnicalDetails) ProtoMessage() {}

func (x *TechnicalDetails) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TechnicalDetails.ProtoReflect.Descriptor instead.
func (*TechnicalDetails) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{11}
}

func (x *TechnicalDetails) GetTechnicalResourceDetailsReference() string {
	if x != nil {
		return x.TechnicalResourceDetailsReference
	}
	return ""
}

func (x *TechnicalDetails) GetDeliveryFile() *DeliveryFile {
	if x != nil {
		return x.DeliveryFile
	}
	return nil
}

func (x *TechnicalDetails) GetIsClip() bool {
	if x != nil {
		return x.IsClip
	}
	return false
}

func (x *TechnicalDetails) GetClipDetails() *ClipDetails {
	if x != nil {
		return x.ClipDetails
	}
	return nil
}

type DeliveryFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                 string        `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	AudioCodecType       string        `protobuf:"bytes,2,opt,name=audio_codec_type,json=audioCodecType,proto3" json:"audio_codec_type,omitempty"`
	NumberOfChannels     int32         `protobuf:"varint,3,opt,name=number_of_channels,json=numberOfChannels,proto3" json:"number_of_channels,omitempty"`
	SamplingRate         *SamplingRate `protobuf:"bytes,4,opt,name=sampling_rate,json=samplingRate,proto3" json:"sampling_rate,omitempty"`
	BitsPerSample        int32         `protobuf:"varint,5,opt,name=bits_per_sample,json=bitsPerSample,proto3" json:"bits_per_sample,omitempty"`
	File                 *File         `protobuf:"bytes,6,opt,name=file,proto3" json:"file,omitempty"`
	IsProvidedInDelivery bool          `protobuf:"varint,7,opt,name=is_provided_in_delivery,json=isProvidedInDelivery,proto3" json:"is_provided_in_delivery,omitempty"`
}

func (x *DeliveryFile) Reset() {
	*x = DeliveryFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryFile) ProtoMessage() {}

func (x *DeliveryFile) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryFile.ProtoReflect.Descriptor instead.
func (*DeliveryFile) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{12}
}

func (x *DeliveryFile) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DeliveryFile) GetAudioCodecType() string {
	if x != nil {
		return x.AudioCodecType
	}
	return ""
}

func (x *DeliveryFile) GetNumberOfChannels() int32 {
	if x != nil {
		return x.NumberOfChannels
	}
	return 0
}

func (x *DeliveryFile) GetSamplingRate() *SamplingRate {
	if x != nil {
		return x.SamplingRate
	}
	return nil
}

func (x *DeliveryFile) GetBitsPerSample() int32 {
	if x != nil {
		return x.BitsPerSample
	}
	return 0
}

func (x *DeliveryFile) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *DeliveryFile) GetIsProvidedInDelivery() bool {
	if x != nil {
		return x.IsProvidedInDelivery
	}
	return false
}

type SamplingRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitOfMeasure string  `protobuf:"bytes,1,opt,name=unit_of_measure,json=unitOfMeasure,proto3" json:"unit_of_measure,omitempty"`
	Value         float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SamplingRate) Reset() {
	*x = SamplingRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SamplingRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SamplingRate) ProtoMessage() {}

func (x *SamplingRate) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SamplingRate.ProtoReflect.Descriptor instead.
func (*SamplingRate) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{13}
}

func (x *SamplingRate) GetUnitOfMeasure() string {
	if x != nil {
		return x.UnitOfMeasure
	}
	return ""
}

func (x *SamplingRate) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri      string   `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	HashSum  *HashSum `protobuf:"bytes,2,opt,name=hash_sum,json=hashSum,proto3" json:"hash_sum,omitempty"`
	FileSize int64    `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{14}
}

func (x *File) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *File) GetHashSum() *HashSum {
	if x != nil {
		return x.HashSum
	}
	return nil
}

func (x *File) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

type HashSum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Algorithm    string `protobuf:"bytes,1,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	HashSumValue string `protobuf:"bytes,2,opt,name=hash_sum_value,json=hashSumValue,proto3" json:"hash_sum_value,omitempty"`
}

func (x *HashSum) Reset() {
	*x = HashSum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashSum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashSum) ProtoMessage() {}

func (x *HashSum) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashSum.ProtoReflect.Descriptor instead.
func (*HashSum) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{15}
}

func (x *HashSum) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *HashSum) GetHashSumValue() string {
	if x != nil {
		return x.HashSumValue
	}
	return ""
}

type ClipDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TechnicalResourceDetailsReference string  `protobuf:"bytes,1,opt,name=technical_resource_details_reference,json=technicalResourceDetailsReference,proto3" json:"technical_resource_details_reference,omitempty"`
	ClipType                          string  `protobuf:"bytes,2,opt,name=clip_type,json=clipType,proto3" json:"clip_type,omitempty"`
	Timing                            *Timing `protobuf:"bytes,3,opt,name=timing,proto3" json:"timing,omitempty"`
	ExpressionType                    string  `protobuf:"bytes,4,opt,name=expression_type,json=expressionType,proto3" json:"expression_type,omitempty"`
}

func (x *ClipDetails) Reset() {
	*x = ClipDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClipDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClipDetails) ProtoMessage() {}

func (x *ClipDetails) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClipDetails.ProtoReflect.Descriptor instead.
func (*ClipDetails) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{16}
}

func (x *ClipDetails) GetTechnicalResourceDetailsReference() string {
	if x != nil {
		return x.TechnicalResourceDetailsReference
	}
	return ""
}

func (x *ClipDetails) GetClipType() string {
	if x != nil {
		return x.ClipType
	}
	return ""
}

func (x *ClipDetails) GetTiming() *Timing {
	if x != nil {
		return x.Timing
	}
	return nil
}

func (x *ClipDetails) GetExpressionType() string {
	if x != nil {
		return x.ExpressionType
	}
	return ""
}

type Timing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartPoint   int64  `protobuf:"varint,1,opt,name=start_point,json=startPoint,proto3" json:"start_point,omitempty"`
	EndPoint     int64  `protobuf:"varint,2,opt,name=end_point,json=endPoint,proto3" json:"end_point,omitempty"`
	DurationUsed string `protobuf:"bytes,3,opt,name=duration_used,json=durationUsed,proto3" json:"duration_used,omitempty"`
}

func (x *Timing) Reset() {
	*x = Timing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timing) ProtoMessage() {}

func (x *Timing) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timing.ProtoReflect.Descriptor instead.
func (*Timing) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{17}
}

func (x *Timing) GetStartPoint() int64 {
	if x != nil {
		return x.StartPoint
	}
	return 0
}

func (x *Timing) GetEndPoint() int64 {
	if x != nil {
		return x.EndPoint
	}
	return 0
}

func (x *Timing) GetDurationUsed() string {
	if x != nil {
		return x.DurationUsed
	}
	return ""
}

type DisplayTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageAndScriptCode string    `protobuf:"bytes,1,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty"`
	TitleText             string    `protobuf:"bytes,2,opt,name=title_text,json=titleText,proto3" json:"title_text,omitempty"`
	SubTitle              *SubTitle `protobuf:"bytes,3,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
}

func (x *DisplayTitle) Reset() {
	*x = DisplayTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayTitle) ProtoMessage() {}

func (x *DisplayTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayTitle.ProtoReflect.Descriptor instead.
func (*DisplayTitle) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{18}
}

func (x *DisplayTitle) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *DisplayTitle) GetTitleText() string {
	if x != nil {
		return x.TitleText
	}
	return ""
}

func (x *DisplayTitle) GetSubTitle() *SubTitle {
	if x != nil {
		return x.SubTitle
	}
	return nil
}

type SubTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubTitleType string `protobuf:"bytes,1,opt,name=sub_title_type,json=subTitleType,proto3" json:"sub_title_type,omitempty"`
	Text         string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *SubTitle) Reset() {
	*x = SubTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubTitle) ProtoMessage() {}

func (x *SubTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubTitle.ProtoReflect.Descriptor instead.
func (*SubTitle) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{19}
}

func (x *SubTitle) GetSubTitleType() string {
	if x != nil {
		return x.SubTitleType
	}
	return ""
}

func (x *SubTitle) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type DisplayArtist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber       int32    `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	ArtistPartyReference string   `protobuf:"bytes,2,opt,name=artist_party_reference,json=artistPartyReference,proto3" json:"artist_party_reference,omitempty"`
	DisplayArtistRole    string   `protobuf:"bytes,3,opt,name=display_artist_role,json=displayArtistRole,proto3" json:"display_artist_role,omitempty"`
	ArtisticRole         []string `protobuf:"bytes,4,rep,name=artistic_role,json=artisticRole,proto3" json:"artistic_role,omitempty"`
}

func (x *DisplayArtist) Reset() {
	*x = DisplayArtist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayArtist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayArtist) ProtoMessage() {}

func (x *DisplayArtist) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayArtist.ProtoReflect.Descriptor instead.
func (*DisplayArtist) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{20}
}

func (x *DisplayArtist) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *DisplayArtist) GetArtistPartyReference() string {
	if x != nil {
		return x.ArtistPartyReference
	}
	return ""
}

func (x *DisplayArtist) GetDisplayArtistRole() string {
	if x != nil {
		return x.DisplayArtistRole
	}
	return ""
}

func (x *DisplayArtist) GetArtisticRole() []string {
	if x != nil {
		return x.ArtisticRole
	}
	return nil
}

type Contributor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber            int32   `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	ContributorPartyReference string  `protobuf:"bytes,2,opt,name=contributor_party_reference,json=contributorPartyReference,proto3" json:"contributor_party_reference,omitempty"`
	Role                      []*Role `protobuf:"bytes,3,rep,name=role,proto3" json:"role,omitempty"`
}

func (x *Contributor) Reset() {
	*x = Contributor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contributor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contributor) ProtoMessage() {}

func (x *Contributor) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contributor.ProtoReflect.Descriptor instead.
func (*Contributor) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{21}
}

func (x *Contributor) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *Contributor) GetContributorPartyReference() string {
	if x != nil {
		return x.ContributorPartyReference
	}
	return ""
}

func (x *Contributor) GetRole() []*Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace        string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UserDefinedValue string `protobuf:"bytes,2,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty"`
	Value            string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"` // For standard roles like Composer, Lyricist, etc.
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{22}
}

func (x *Role) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Role) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

func (x *Role) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Release information (album/single)
type Release struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseReference      string           `protobuf:"bytes,1,opt,name=release_reference,json=releaseReference,proto3" json:"release_reference,omitempty"`
	ReleaseType           string           `protobuf:"bytes,2,opt,name=release_type,json=releaseType,proto3" json:"release_type,omitempty"`
	ReleaseId             *ReleaseId       `protobuf:"bytes,3,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	DisplayTitleText      string           `protobuf:"bytes,4,opt,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty"`
	LanguageAndScriptCode string           `protobuf:"bytes,5,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty"`
	DisplayTitle          *DisplayTitle    `protobuf:"bytes,6,opt,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty"`
	DisplayArtistName     string           `protobuf:"bytes,7,opt,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty"`
	DisplayArtist         []*DisplayArtist `protobuf:"bytes,8,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty"`
	ReleaseLabelReference string           `protobuf:"bytes,9,opt,name=release_label_reference,json=releaseLabelReference,proto3" json:"release_label_reference,omitempty"`
	LabelType             string           `protobuf:"bytes,10,opt,name=label_type,json=labelType,proto3" json:"label_type,omitempty"`
	PLine                 *PLine           `protobuf:"bytes,11,opt,name=p_line,json=pLine,proto3" json:"p_line,omitempty"`
	Duration              string           `protobuf:"bytes,12,opt,name=duration,proto3" json:"duration,omitempty"`
	Genre                 []*Genre         `protobuf:"bytes,13,rep,name=genre,proto3" json:"genre,omitempty"`
	OriginalReleaseDate   string           `protobuf:"bytes,14,opt,name=original_release_date,json=originalReleaseDate,proto3" json:"original_release_date,omitempty"`
	ParentalWarningType   string           `protobuf:"bytes,15,opt,name=parental_warning_type,json=parentalWarningType,proto3" json:"parental_warning_type,omitempty"`
	ResourceGroup         *ResourceGroup   `protobuf:"bytes,16,opt,name=resource_group,json=resourceGroup,proto3" json:"resource_group,omitempty"`
}

func (x *Release) Reset() {
	*x = Release{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Release) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Release) ProtoMessage() {}

func (x *Release) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Release.ProtoReflect.Descriptor instead.
func (*Release) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{23}
}

func (x *Release) GetReleaseReference() string {
	if x != nil {
		return x.ReleaseReference
	}
	return ""
}

func (x *Release) GetReleaseType() string {
	if x != nil {
		return x.ReleaseType
	}
	return ""
}

func (x *Release) GetReleaseId() *ReleaseId {
	if x != nil {
		return x.ReleaseId
	}
	return nil
}

func (x *Release) GetDisplayTitleText() string {
	if x != nil {
		return x.DisplayTitleText
	}
	return ""
}

func (x *Release) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *Release) GetDisplayTitle() *DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *Release) GetDisplayArtistName() string {
	if x != nil {
		return x.DisplayArtistName
	}
	return ""
}

func (x *Release) GetDisplayArtist() []*DisplayArtist {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

func (x *Release) GetReleaseLabelReference() string {
	if x != nil {
		return x.ReleaseLabelReference
	}
	return ""
}

func (x *Release) GetLabelType() string {
	if x != nil {
		return x.LabelType
	}
	return ""
}

func (x *Release) GetPLine() *PLine {
	if x != nil {
		return x.PLine
	}
	return nil
}

func (x *Release) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Release) GetGenre() []*Genre {
	if x != nil {
		return x.Genre
	}
	return nil
}

func (x *Release) GetOriginalReleaseDate() string {
	if x != nil {
		return x.OriginalReleaseDate
	}
	return ""
}

func (x *Release) GetParentalWarningType() string {
	if x != nil {
		return x.ParentalWarningType
	}
	return ""
}

func (x *Release) GetResourceGroup() *ResourceGroup {
	if x != nil {
		return x.ResourceGroup
	}
	return nil
}

type ReleaseId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Grid          string         `protobuf:"bytes,1,opt,name=grid,proto3" json:"grid,omitempty"`
	Icpn          string         `protobuf:"bytes,2,opt,name=icpn,proto3" json:"icpn,omitempty"`
	CatalogNumber *CatalogNumber `protobuf:"bytes,3,opt,name=catalog_number,json=catalogNumber,proto3" json:"catalog_number,omitempty"`
}

func (x *ReleaseId) Reset() {
	*x = ReleaseId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseId) ProtoMessage() {}

func (x *ReleaseId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseId.ProtoReflect.Descriptor instead.
func (*ReleaseId) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{24}
}

func (x *ReleaseId) GetGrid() string {
	if x != nil {
		return x.Grid
	}
	return ""
}

func (x *ReleaseId) GetIcpn() string {
	if x != nil {
		return x.Icpn
	}
	return ""
}

func (x *ReleaseId) GetCatalogNumber() *CatalogNumber {
	if x != nil {
		return x.CatalogNumber
	}
	return nil
}

type CatalogNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Value     string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CatalogNumber) Reset() {
	*x = CatalogNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogNumber) ProtoMessage() {}

func (x *CatalogNumber) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogNumber.ProtoReflect.Descriptor instead.
func (*CatalogNumber) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{25}
}

func (x *CatalogNumber) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CatalogNumber) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Genre struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicableTerritoryCode string `protobuf:"bytes,1,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3" json:"applicable_territory_code,omitempty"`
	GenreText               string `protobuf:"bytes,2,opt,name=genre_text,json=genreText,proto3" json:"genre_text,omitempty"`
}

func (x *Genre) Reset() {
	*x = Genre{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Genre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genre) ProtoMessage() {}

func (x *Genre) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genre.ProtoReflect.Descriptor instead.
func (*Genre) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{26}
}

func (x *Genre) GetApplicableTerritoryCode() string {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return ""
}

func (x *Genre) GetGenreText() string {
	if x != nil {
		return x.GenreText
	}
	return ""
}

type ResourceGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceGroupType        string                      `protobuf:"bytes,1,opt,name=resource_group_type,json=resourceGroupType,proto3" json:"resource_group_type,omitempty"`
	AdditionalTitle          *AdditionalTitle            `protobuf:"bytes,2,opt,name=additional_title,json=additionalTitle,proto3" json:"additional_title,omitempty"`
	SequenceNumber           int32                       `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	ResourceGroupContentItem []*ResourceGroupContentItem `protobuf:"bytes,4,rep,name=resource_group_content_item,json=resourceGroupContentItem,proto3" json:"resource_group_content_item,omitempty"`
	NestedResourceGroup      []*ResourceGroup            `protobuf:"bytes,5,rep,name=nested_resource_group,json=nestedResourceGroup,proto3" json:"nested_resource_group,omitempty"` // For nested groups like multiple discs
}

func (x *ResourceGroup) Reset() {
	*x = ResourceGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceGroup) ProtoMessage() {}

func (x *ResourceGroup) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceGroup.ProtoReflect.Descriptor instead.
func (*ResourceGroup) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{27}
}

func (x *ResourceGroup) GetResourceGroupType() string {
	if x != nil {
		return x.ResourceGroupType
	}
	return ""
}

func (x *ResourceGroup) GetAdditionalTitle() *AdditionalTitle {
	if x != nil {
		return x.AdditionalTitle
	}
	return nil
}

func (x *ResourceGroup) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *ResourceGroup) GetResourceGroupContentItem() []*ResourceGroupContentItem {
	if x != nil {
		return x.ResourceGroupContentItem
	}
	return nil
}

func (x *ResourceGroup) GetNestedResourceGroup() []*ResourceGroup {
	if x != nil {
		return x.NestedResourceGroup
	}
	return nil
}

type AdditionalTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleType string `protobuf:"bytes,1,opt,name=title_type,json=titleType,proto3" json:"title_type,omitempty"`
	TitleText string `protobuf:"bytes,2,opt,name=title_text,json=titleText,proto3" json:"title_text,omitempty"`
}

func (x *AdditionalTitle) Reset() {
	*x = AdditionalTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionalTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionalTitle) ProtoMessage() {}

func (x *AdditionalTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionalTitle.ProtoReflect.Descriptor instead.
func (*AdditionalTitle) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{28}
}

func (x *AdditionalTitle) GetTitleType() string {
	if x != nil {
		return x.TitleType
	}
	return ""
}

func (x *AdditionalTitle) GetTitleText() string {
	if x != nil {
		return x.TitleText
	}
	return ""
}

type ResourceGroupContentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumber           int32  `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	ReleaseResourceReference string `protobuf:"bytes,2,opt,name=release_resource_reference,json=releaseResourceReference,proto3" json:"release_resource_reference,omitempty"`
}

func (x *ResourceGroupContentItem) Reset() {
	*x = ResourceGroupContentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceGroupContentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceGroupContentItem) ProtoMessage() {}

func (x *ResourceGroupContentItem) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceGroupContentItem.ProtoReflect.Descriptor instead.
func (*ResourceGroupContentItem) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{29}
}

func (x *ResourceGroupContentItem) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *ResourceGroupContentItem) GetReleaseResourceReference() string {
	if x != nil {
		return x.ReleaseResourceReference
	}
	return ""
}

// Deal information (licensing/distribution terms)
type DealList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseDeal []*ReleaseDeal `protobuf:"bytes,1,rep,name=release_deal,json=releaseDeal,proto3" json:"release_deal,omitempty"`
}

func (x *DealList) Reset() {
	*x = DealList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealList) ProtoMessage() {}

func (x *DealList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealList.ProtoReflect.Descriptor instead.
func (*DealList) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{30}
}

func (x *DealList) GetReleaseDeal() []*ReleaseDeal {
	if x != nil {
		return x.ReleaseDeal
	}
	return nil
}

type ReleaseDeal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DealReleaseReference []string `protobuf:"bytes,1,rep,name=deal_release_reference,json=dealReleaseReference,proto3" json:"deal_release_reference,omitempty"`
	Deal                 []*Deal  `protobuf:"bytes,2,rep,name=deal,proto3" json:"deal,omitempty"`
}

func (x *ReleaseDeal) Reset() {
	*x = ReleaseDeal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseDeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseDeal) ProtoMessage() {}

func (x *ReleaseDeal) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseDeal.ProtoReflect.Descriptor instead.
func (*ReleaseDeal) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{31}
}

func (x *ReleaseDeal) GetDealReleaseReference() []string {
	if x != nil {
		return x.DealReleaseReference
	}
	return nil
}

func (x *ReleaseDeal) GetDeal() []*Deal {
	if x != nil {
		return x.Deal
	}
	return nil
}

type Deal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DealTerms *DealTerms `protobuf:"bytes,1,opt,name=deal_terms,json=dealTerms,proto3" json:"deal_terms,omitempty"`
}

func (x *Deal) Reset() {
	*x = Deal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deal) ProtoMessage() {}

func (x *Deal) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deal.ProtoReflect.Descriptor instead.
func (*Deal) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{32}
}

func (x *Deal) GetDealTerms() *DealTerms {
	if x != nil {
		return x.DealTerms
	}
	return nil
}

type DealTerms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TerritoryCode       []string             `protobuf:"bytes,1,rep,name=territory_code,json=territoryCode,proto3" json:"territory_code,omitempty"`
	ValidityPeriod      string               `protobuf:"bytes,2,opt,name=validity_period,json=validityPeriod,proto3" json:"validity_period,omitempty"`
	UseType             []*UseType           `protobuf:"bytes,3,rep,name=use_type,json=useType,proto3" json:"use_type,omitempty"`
	CommercialModelType *CommercialModelType `protobuf:"bytes,4,opt,name=commercial_model_type,json=commercialModelType,proto3" json:"commercial_model_type,omitempty"`
	DistributionChannel []string             `protobuf:"bytes,5,rep,name=distribution_channel,json=distributionChannel,proto3" json:"distribution_channel,omitempty"`
	PriceInformation    *PriceInformation    `protobuf:"bytes,6,opt,name=price_information,json=priceInformation,proto3" json:"price_information,omitempty"`
}

func (x *DealTerms) Reset() {
	*x = DealTerms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealTerms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealTerms) ProtoMessage() {}

func (x *DealTerms) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealTerms.ProtoReflect.Descriptor instead.
func (*DealTerms) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{33}
}

func (x *DealTerms) GetTerritoryCode() []string {
	if x != nil {
		return x.TerritoryCode
	}
	return nil
}

func (x *DealTerms) GetValidityPeriod() string {
	if x != nil {
		return x.ValidityPeriod
	}
	return ""
}

func (x *DealTerms) GetUseType() []*UseType {
	if x != nil {
		return x.UseType
	}
	return nil
}

func (x *DealTerms) GetCommercialModelType() *CommercialModelType {
	if x != nil {
		return x.CommercialModelType
	}
	return nil
}

func (x *DealTerms) GetDistributionChannel() []string {
	if x != nil {
		return x.DistributionChannel
	}
	return nil
}

func (x *DealTerms) GetPriceInformation() *PriceInformation {
	if x != nil {
		return x.PriceInformation
	}
	return nil
}

type UseType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value            string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	UserDefinedValue string `protobuf:"bytes,2,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty"`
}

func (x *UseType) Reset() {
	*x = UseType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseType) ProtoMessage() {}

func (x *UseType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseType.ProtoReflect.Descriptor instead.
func (*UseType) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{34}
}

func (x *UseType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UseType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type CommercialModelType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value            string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	UserDefinedValue string `protobuf:"bytes,2,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty"`
}

func (x *CommercialModelType) Reset() {
	*x = CommercialModelType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommercialModelType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommercialModelType) ProtoMessage() {}

func (x *CommercialModelType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommercialModelType.ProtoReflect.Descriptor instead.
func (*CommercialModelType) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{35}
}

func (x *CommercialModelType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CommercialModelType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type PriceInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price                 *Price `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	WholesalePricePerUnit string `protobuf:"bytes,2,opt,name=wholesale_price_per_unit,json=wholesalePricePerUnit,proto3" json:"wholesale_price_per_unit,omitempty"`
}

func (x *PriceInformation) Reset() {
	*x = PriceInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceInformation) ProtoMessage() {}

func (x *PriceInformation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceInformation.ProtoReflect.Descriptor instead.
func (*PriceInformation) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{36}
}

func (x *PriceInformation) GetPrice() *Price {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *PriceInformation) GetWholesalePricePerUnit() string {
	if x != nil {
		return x.WholesalePricePerUnit
	}
	return ""
}

type Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyCode string  `protobuf:"bytes,1,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	Amount       float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	PriceType    string  `protobuf:"bytes,3,opt,name=price_type,json=priceType,proto3" json:"price_type,omitempty"`
}

func (x *Price) Reset() {
	*x = Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{37}
}

func (x *Price) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *Price) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Price) GetPriceType() string {
	if x != nil {
		return x.PriceType
	}
	return ""
}

// Additional utility messages for extensions
type LanguageAndScriptCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *LanguageAndScriptCode) Reset() {
	*x = LanguageAndScriptCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LanguageAndScriptCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageAndScriptCode) ProtoMessage() {}

func (x *LanguageAndScriptCode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageAndScriptCode.ProtoReflect.Descriptor instead.
func (*LanguageAndScriptCode) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{38}
}

func (x *LanguageAndScriptCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type DateTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsoString string `protobuf:"bytes,1,opt,name=iso_string,json=isoString,proto3" json:"iso_string,omitempty"`
}

func (x *DateTime) Reset() {
	*x = DateTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateTime) ProtoMessage() {}

func (x *DateTime) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateTime.ProtoReflect.Descriptor instead.
func (*DateTime) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{39}
}

func (x *DateTime) GetIsoString() string {
	if x != nil {
		return x.IsoString
	}
	return ""
}

type Duration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsoDuration string `protobuf:"bytes,1,opt,name=iso_duration,json=isoDuration,proto3" json:"iso_duration,omitempty"` // ISO 8601 duration format like PT0H3M37S
}

func (x *Duration) Reset() {
	*x = Duration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Duration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Duration) ProtoMessage() {}

func (x *Duration) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Duration.ProtoReflect.Descriptor instead.
func (*Duration) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{40}
}

func (x *Duration) GetIsoDuration() string {
	if x != nil {
		return x.IsoDuration
	}
	return ""
}

// Acknowledgment for processed NewReleaseMessage
type NewReleaseMessageAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseAddress          *NewReleaseMessageAck_Address   `protobuf:"bytes,1,opt,name=release_address,json=releaseAddress,proto3" json:"release_address,omitempty"`                              // Where the Release is stored
	PartyAddresses          []*NewReleaseMessageAck_Address `protobuf:"bytes,2,rep,name=party_addresses,json=partyAddresses,proto3" json:"party_addresses,omitempty"`                              // Artist, label, publisher addresses
	SoundRecordingAddresses []*NewReleaseMessageAck_Address `protobuf:"bytes,3,rep,name=sound_recording_addresses,json=soundRecordingAddresses,proto3" json:"sound_recording_addresses,omitempty"` // Individual track addresses
	ImageAddresses          []*NewReleaseMessageAck_Address `protobuf:"bytes,4,rep,name=image_addresses,json=imageAddresses,proto3" json:"image_addresses,omitempty"`                              // Album art, photo addresses
	DealAddresses           []*NewReleaseMessageAck_Address `protobuf:"bytes,5,rep,name=deal_addresses,json=dealAddresses,proto3" json:"deal_addresses,omitempty"`                                 // Licensing deal addresses
}

func (x *NewReleaseMessageAck) Reset() {
	*x = NewReleaseMessageAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewReleaseMessageAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewReleaseMessageAck) ProtoMessage() {}

func (x *NewReleaseMessageAck) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewReleaseMessageAck.ProtoReflect.Descriptor instead.
func (*NewReleaseMessageAck) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{41}
}

func (x *NewReleaseMessageAck) GetReleaseAddress() *NewReleaseMessageAck_Address {
	if x != nil {
		return x.ReleaseAddress
	}
	return nil
}

func (x *NewReleaseMessageAck) GetPartyAddresses() []*NewReleaseMessageAck_Address {
	if x != nil {
		return x.PartyAddresses
	}
	return nil
}

func (x *NewReleaseMessageAck) GetSoundRecordingAddresses() []*NewReleaseMessageAck_Address {
	if x != nil {
		return x.SoundRecordingAddresses
	}
	return nil
}

func (x *NewReleaseMessageAck) GetImageAddresses() []*NewReleaseMessageAck_Address {
	if x != nil {
		return x.ImageAddresses
	}
	return nil
}

func (x *NewReleaseMessageAck) GetDealAddresses() []*NewReleaseMessageAck_Address {
	if x != nil {
		return x.DealAddresses
	}
	return nil
}

type NewReleaseMessageAck_Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index   uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *NewReleaseMessageAck_Address) Reset() {
	*x = NewReleaseMessageAck_Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta2_ern_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewReleaseMessageAck_Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewReleaseMessageAck_Address) ProtoMessage() {}

func (x *NewReleaseMessageAck_Address) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta2_ern_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewReleaseMessageAck_Address.ProtoReflect.Descriptor instead.
func (*NewReleaseMessageAck_Address) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta2_ern_proto_rawDescGZIP(), []int{41, 0}
}

func (x *NewReleaseMessageAck_Address) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *NewReleaseMessageAck_Address) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

var File_ddex_v1beta2_ern_proto protoreflect.FileDescriptor

var file_ddex_v1beta2_ern_proto_rawDesc = []byte{
	0x0a, 0x16, 0x64, 0x64, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2f, 0x65,
	0x72, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x22, 0x9c, 0x03, 0x0a, 0x11, 0x4e, 0x65, 0x77, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x61, 0x76, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x76, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x61,
	0x6e, 0x64, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x41, 0x6e,
	0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x32, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x32, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x09, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x32, 0x2e, 0x44, 0x65, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x64, 0x65, 0x61,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xfa, 0x02, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x42, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x52,
	0x0a, 0x14, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x64,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x62, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x36,
	0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x32, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x64, 0x65, 0x78,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9a, 0x01,
	0x0a, 0x05, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x36, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x32, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x64, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x09, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a,
	0x07, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x70, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x70, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xea, 0x05, 0x0a, 0x0e, 0x53, 0x6f, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x5b, 0x0a, 0x17,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x53, 0x6f, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x15, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x34, 0x0a, 0x16, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x66, 0x69, 0x72, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4f, 0x66, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0xdf, 0x01, 0x0a, 0x15, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x39, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06,
	0x70, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x50, 0x4c, 0x69, 0x6e,
	0x65, 0x52, 0x05, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x4b, 0x0a, 0x11, 0x74, 0x65, 0x63, 0x68,
	0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x32, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x10, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x20, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x73, 0x72, 0x63, 0x22, 0x3b, 0x0a, 0x05, 0x50, 0x4c, 0x69, 0x6e, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x4c, 0x69, 0x6e, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x22, 0xfb, 0x01, 0x0a, 0x10, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63,
	0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4f, 0x0a, 0x24, 0x74, 0x65, 0x63,
	0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x21, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32,
	0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0c, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x73, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73,
	0x43, 0x6c, 0x69, 0x70, 0x12, 0x3c, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0xc2, 0x02, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12,
	0x3f, 0x0a, 0x0d, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x61,
	0x74, 0x65, 0x52, 0x0c, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x62, 0x69, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x69, 0x74, 0x73, 0x50,
	0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x35, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x5f,
	0x69, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x14, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x49, 0x6e, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x22, 0x4c, 0x0a, 0x0c, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x69, 0x74, 0x5f,
	0x6f, 0x66, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x75, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x67, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x30, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32,
	0x2e, 0x48, 0x61, 0x73, 0x68, 0x53, 0x75, 0x6d, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x53, 0x75,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4d,
	0x0a, 0x07, 0x48, 0x61, 0x73, 0x68, 0x53, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x68, 0x5f,
	0x73, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x68, 0x61, 0x73, 0x68, 0x53, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xd2, 0x01,
	0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4f, 0x0a,
	0x24, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x21, 0x74, 0x65, 0x63,
	0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x74,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x54, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x6b, 0x0a, 0x06, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x22,
	0x9b, 0x01, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x37, 0x0a, 0x18, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x64,
	0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x41, 0x6e, 0x64, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x44, 0x0a,
	0x08, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x75, 0x62,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x34,
	0x0a, 0x16, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x0b, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x3e, 0x0a, 0x1b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x68, 0x0a, 0x04, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x75, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xa3, 0x06, 0x0a, 0x07, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x36, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x52, 0x09, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x3f, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x42, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x70,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x50, 0x4c, 0x69, 0x6e, 0x65,
	0x52, 0x05, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x32, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x32,
	0x0a, 0x15, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x77,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x57, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0d, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x77, 0x0a, 0x09, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x72, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x72, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x70, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x70, 0x6e, 0x12,
	0x42, 0x0a, 0x0e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x43, 0x0a, 0x0d, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x62, 0x0a, 0x05, 0x47, 0x65, 0x6e, 0x72,
	0x65, 0x12, 0x3a, 0x0a, 0x19, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65,
	0x54, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x22, 0xea, 0x02, 0x0a,
	0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2e,
	0x0a, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48,
	0x0a, 0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x65, 0x0a, 0x1b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x18,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x4f, 0x0a, 0x15, 0x6e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x13, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x4f, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x18, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x3c, 0x0a, 0x1a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x48,
	0x0a, 0x08, 0x44, 0x65, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x0b, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x22, 0x6b, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x65, 0x61, 0x6c, 0x5f,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a,
	0x04, 0x64, 0x65, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x44, 0x65, 0x61, 0x6c, 0x52,
	0x04, 0x64, 0x65, 0x61, 0x6c, 0x22, 0x3e, 0x0a, 0x04, 0x44, 0x65, 0x61, 0x6c, 0x12, 0x36, 0x0a,
	0x0a, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32,
	0x2e, 0x44, 0x65, 0x61, 0x6c, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x52, 0x09, 0x64, 0x65, 0x61, 0x6c,
	0x54, 0x65, 0x72, 0x6d, 0x73, 0x22, 0xe4, 0x02, 0x0a, 0x09, 0x44, 0x65, 0x61, 0x6c, 0x54, 0x65,
	0x72, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x72,
	0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x55, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63,
	0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63,
	0x69, 0x61, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x14,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x4b, 0x0a, 0x11, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x07,
	0x55, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x59, 0x0a, 0x13, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x76, 0x0a, 0x10, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x64, 0x65, 0x78,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61,
	0x6c, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61,
	0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x63,
	0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x41,
	0x6e, 0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x29, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x6f, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x73, 0x6f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2d, 0x0a, 0x08, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x6f, 0x5f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69,
	0x73, 0x6f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8b, 0x04, 0x0a, 0x14, 0x4e,
	0x65, 0x77, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x41, 0x63, 0x6b, 0x12, 0x53, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x4e, 0x65, 0x77, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x6b,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x53, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32,
	0x2e, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x63, 0x6b, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x66, 0x0a,
	0x19, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e,
	0x4e, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x41, 0x63, 0x6b, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x17, 0x73, 0x6f,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x4e, 0x65,
	0x77, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41,
	0x63, 0x6b, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x0e, 0x64, 0x65,
	0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x32, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x41, 0x63, 0x6b, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d,
	0x64, 0x65, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x1a, 0x39, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2a, 0xcd, 0x01, 0x0a, 0x12, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x20, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52,
	0x4f, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2c, 0x0a, 0x28, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x45,
	0x57, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
	0x45, 0x10, 0x01, 0x12, 0x30, 0x0a, 0x2c, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x43,
	0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x31, 0x0a, 0x2d, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41,
	0x4b, 0x45, 0x44, 0x4f, 0x57, 0x4e, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x03, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x75, 0x64, 0x69, 0x75, 0x73, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x75, 0x73, 0x64, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x64, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ddex_v1beta2_ern_proto_rawDescOnce sync.Once
	file_ddex_v1beta2_ern_proto_rawDescData = file_ddex_v1beta2_ern_proto_rawDesc
)

func file_ddex_v1beta2_ern_proto_rawDescGZIP() []byte {
	file_ddex_v1beta2_ern_proto_rawDescOnce.Do(func() {
		file_ddex_v1beta2_ern_proto_rawDescData = protoimpl.X.CompressGZIP(file_ddex_v1beta2_ern_proto_rawDescData)
	})
	return file_ddex_v1beta2_ern_proto_rawDescData
}

var file_ddex_v1beta2_ern_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ddex_v1beta2_ern_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_ddex_v1beta2_ern_proto_goTypes = []interface{}{
	(MessageControlType)(0),              // 0: ddex.v1beta2.MessageControlType
	(*NewReleaseMessage)(nil),            // 1: ddex.v1beta2.NewReleaseMessage
	(*MessageHeader)(nil),                // 2: ddex.v1beta2.MessageHeader
	(*MessageSender)(nil),                // 3: ddex.v1beta2.MessageSender
	(*MessageRecipient)(nil),             // 4: ddex.v1beta2.MessageRecipient
	(*Party)(nil),                        // 5: ddex.v1beta2.Party
	(*PartyName)(nil),                    // 6: ddex.v1beta2.PartyName
	(*PartyId)(nil),                      // 7: ddex.v1beta2.PartyId
	(*SoundRecording)(nil),               // 8: ddex.v1beta2.SoundRecording
	(*SoundRecordingEdition)(nil),        // 9: ddex.v1beta2.SoundRecordingEdition
	(*ResourceId)(nil),                   // 10: ddex.v1beta2.ResourceId
	(*PLine)(nil),                        // 11: ddex.v1beta2.PLine
	(*TechnicalDetails)(nil),             // 12: ddex.v1beta2.TechnicalDetails
	(*DeliveryFile)(nil),                 // 13: ddex.v1beta2.DeliveryFile
	(*SamplingRate)(nil),                 // 14: ddex.v1beta2.SamplingRate
	(*File)(nil),                         // 15: ddex.v1beta2.File
	(*HashSum)(nil),                      // 16: ddex.v1beta2.HashSum
	(*ClipDetails)(nil),                  // 17: ddex.v1beta2.ClipDetails
	(*Timing)(nil),                       // 18: ddex.v1beta2.Timing
	(*DisplayTitle)(nil),                 // 19: ddex.v1beta2.DisplayTitle
	(*SubTitle)(nil),                     // 20: ddex.v1beta2.SubTitle
	(*DisplayArtist)(nil),                // 21: ddex.v1beta2.DisplayArtist
	(*Contributor)(nil),                  // 22: ddex.v1beta2.Contributor
	(*Role)(nil),                         // 23: ddex.v1beta2.Role
	(*Release)(nil),                      // 24: ddex.v1beta2.Release
	(*ReleaseId)(nil),                    // 25: ddex.v1beta2.ReleaseId
	(*CatalogNumber)(nil),                // 26: ddex.v1beta2.CatalogNumber
	(*Genre)(nil),                        // 27: ddex.v1beta2.Genre
	(*ResourceGroup)(nil),                // 28: ddex.v1beta2.ResourceGroup
	(*AdditionalTitle)(nil),              // 29: ddex.v1beta2.AdditionalTitle
	(*ResourceGroupContentItem)(nil),     // 30: ddex.v1beta2.ResourceGroupContentItem
	(*DealList)(nil),                     // 31: ddex.v1beta2.DealList
	(*ReleaseDeal)(nil),                  // 32: ddex.v1beta2.ReleaseDeal
	(*Deal)(nil),                         // 33: ddex.v1beta2.Deal
	(*DealTerms)(nil),                    // 34: ddex.v1beta2.DealTerms
	(*UseType)(nil),                      // 35: ddex.v1beta2.UseType
	(*CommercialModelType)(nil),          // 36: ddex.v1beta2.CommercialModelType
	(*PriceInformation)(nil),             // 37: ddex.v1beta2.PriceInformation
	(*Price)(nil),                        // 38: ddex.v1beta2.Price
	(*LanguageAndScriptCode)(nil),        // 39: ddex.v1beta2.LanguageAndScriptCode
	(*DateTime)(nil),                     // 40: ddex.v1beta2.DateTime
	(*Duration)(nil),                     // 41: ddex.v1beta2.Duration
	(*NewReleaseMessageAck)(nil),         // 42: ddex.v1beta2.NewReleaseMessageAck
	(*NewReleaseMessageAck_Address)(nil), // 43: ddex.v1beta2.NewReleaseMessageAck.Address
}
var file_ddex_v1beta2_ern_proto_depIdxs = []int32{
	2,  // 0: ddex.v1beta2.NewReleaseMessage.message_header:type_name -> ddex.v1beta2.MessageHeader
	5,  // 1: ddex.v1beta2.NewReleaseMessage.party_list:type_name -> ddex.v1beta2.Party
	8,  // 2: ddex.v1beta2.NewReleaseMessage.resource_list:type_name -> ddex.v1beta2.SoundRecording
	24, // 3: ddex.v1beta2.NewReleaseMessage.release_list:type_name -> ddex.v1beta2.Release
	31, // 4: ddex.v1beta2.NewReleaseMessage.deal_list:type_name -> ddex.v1beta2.DealList
	3,  // 5: ddex.v1beta2.MessageHeader.message_sender:type_name -> ddex.v1beta2.MessageSender
	4,  // 6: ddex.v1beta2.MessageHeader.message_recipient:type_name -> ddex.v1beta2.MessageRecipient
	0,  // 7: ddex.v1beta2.MessageHeader.message_control_type:type_name -> ddex.v1beta2.MessageControlType
	6,  // 8: ddex.v1beta2.MessageSender.party_name:type_name -> ddex.v1beta2.PartyName
	6,  // 9: ddex.v1beta2.MessageRecipient.party_name:type_name -> ddex.v1beta2.PartyName
	6,  // 10: ddex.v1beta2.Party.party_name:type_name -> ddex.v1beta2.PartyName
	7,  // 11: ddex.v1beta2.Party.party_id:type_name -> ddex.v1beta2.PartyId
	9,  // 12: ddex.v1beta2.SoundRecording.sound_recording_edition:type_name -> ddex.v1beta2.SoundRecordingEdition
	19, // 13: ddex.v1beta2.SoundRecording.display_title:type_name -> ddex.v1beta2.DisplayTitle
	21, // 14: ddex.v1beta2.SoundRecording.display_artist:type_name -> ddex.v1beta2.DisplayArtist
	22, // 15: ddex.v1beta2.SoundRecording.contributor:type_name -> ddex.v1beta2.Contributor
	10, // 16: ddex.v1beta2.SoundRecordingEdition.resource_id:type_name -> ddex.v1beta2.ResourceId
	11, // 17: ddex.v1beta2.SoundRecordingEdition.p_line:type_name -> ddex.v1beta2.PLine
	12, // 18: ddex.v1beta2.SoundRecordingEdition.technical_details:type_name -> ddex.v1beta2.TechnicalDetails
	13, // 19: ddex.v1beta2.TechnicalDetails.delivery_file:type_name -> ddex.v1beta2.DeliveryFile
	17, // 20: ddex.v1beta2.TechnicalDetails.clip_details:type_name -> ddex.v1beta2.ClipDetails
	14, // 21: ddex.v1beta2.DeliveryFile.sampling_rate:type_name -> ddex.v1beta2.SamplingRate
	15, // 22: ddex.v1beta2.DeliveryFile.file:type_name -> ddex.v1beta2.File
	16, // 23: ddex.v1beta2.File.hash_sum:type_name -> ddex.v1beta2.HashSum
	18, // 24: ddex.v1beta2.ClipDetails.timing:type_name -> ddex.v1beta2.Timing
	20, // 25: ddex.v1beta2.DisplayTitle.sub_title:type_name -> ddex.v1beta2.SubTitle
	23, // 26: ddex.v1beta2.Contributor.role:type_name -> ddex.v1beta2.Role
	25, // 27: ddex.v1beta2.Release.release_id:type_name -> ddex.v1beta2.ReleaseId
	19, // 28: ddex.v1beta2.Release.display_title:type_name -> ddex.v1beta2.DisplayTitle
	21, // 29: ddex.v1beta2.Release.display_artist:type_name -> ddex.v1beta2.DisplayArtist
	11, // 30: ddex.v1beta2.Release.p_line:type_name -> ddex.v1beta2.PLine
	27, // 31: ddex.v1beta2.Release.genre:type_name -> ddex.v1beta2.Genre
	28, // 32: ddex.v1beta2.Release.resource_group:type_name -> ddex.v1beta2.ResourceGroup
	26, // 33: ddex.v1beta2.ReleaseId.catalog_number:type_name -> ddex.v1beta2.CatalogNumber
	29, // 34: ddex.v1beta2.ResourceGroup.additional_title:type_name -> ddex.v1beta2.AdditionalTitle
	30, // 35: ddex.v1beta2.ResourceGroup.resource_group_content_item:type_name -> ddex.v1beta2.ResourceGroupContentItem
	28, // 36: ddex.v1beta2.ResourceGroup.nested_resource_group:type_name -> ddex.v1beta2.ResourceGroup
	32, // 37: ddex.v1beta2.DealList.release_deal:type_name -> ddex.v1beta2.ReleaseDeal
	33, // 38: ddex.v1beta2.ReleaseDeal.deal:type_name -> ddex.v1beta2.Deal
	34, // 39: ddex.v1beta2.Deal.deal_terms:type_name -> ddex.v1beta2.DealTerms
	35, // 40: ddex.v1beta2.DealTerms.use_type:type_name -> ddex.v1beta2.UseType
	36, // 41: ddex.v1beta2.DealTerms.commercial_model_type:type_name -> ddex.v1beta2.CommercialModelType
	37, // 42: ddex.v1beta2.DealTerms.price_information:type_name -> ddex.v1beta2.PriceInformation
	38, // 43: ddex.v1beta2.PriceInformation.price:type_name -> ddex.v1beta2.Price
	43, // 44: ddex.v1beta2.NewReleaseMessageAck.release_address:type_name -> ddex.v1beta2.NewReleaseMessageAck.Address
	43, // 45: ddex.v1beta2.NewReleaseMessageAck.party_addresses:type_name -> ddex.v1beta2.NewReleaseMessageAck.Address
	43, // 46: ddex.v1beta2.NewReleaseMessageAck.sound_recording_addresses:type_name -> ddex.v1beta2.NewReleaseMessageAck.Address
	43, // 47: ddex.v1beta2.NewReleaseMessageAck.image_addresses:type_name -> ddex.v1beta2.NewReleaseMessageAck.Address
	43, // 48: ddex.v1beta2.NewReleaseMessageAck.deal_addresses:type_name -> ddex.v1beta2.NewReleaseMessageAck.Address
	49, // [49:49] is the sub-list for method output_type
	49, // [49:49] is the sub-list for method input_type
	49, // [49:49] is the sub-list for extension type_name
	49, // [49:49] is the sub-list for extension extendee
	0,  // [0:49] is the sub-list for field type_name
}

func init() { file_ddex_v1beta2_ern_proto_init() }
func file_ddex_v1beta2_ern_proto_init() {
	if File_ddex_v1beta2_ern_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ddex_v1beta2_ern_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewReleaseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageSender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageRecipient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Party); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartyName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartyId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoundRecording); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoundRecordingEdition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TechnicalDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SamplingRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashSum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClipDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplayTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplayArtist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contributor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Release); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Genre); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionalTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceGroupContentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseDeal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealTerms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommercialModelType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LanguageAndScriptCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Duration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewReleaseMessageAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta2_ern_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewReleaseMessageAck_Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ddex_v1beta2_ern_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ddex_v1beta2_ern_proto_goTypes,
		DependencyIndexes: file_ddex_v1beta2_ern_proto_depIdxs,
		EnumInfos:         file_ddex_v1beta2_ern_proto_enumTypes,
		MessageInfos:      file_ddex_v1beta2_ern_proto_msgTypes,
	}.Build()
	File_ddex_v1beta2_ern_proto = out.File
	file_ddex_v1beta2_ern_proto_rawDesc = nil
	file_ddex_v1beta2_ern_proto_goTypes = nil
	file_ddex_v1beta2_ern_proto_depIdxs = nil
}
