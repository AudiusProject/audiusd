// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: ddex/v1beta1/release.proto

package v1beta1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewReleaseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseHeader *ReleaseHeader `protobuf:"bytes,1,opt,name=release_header,json=releaseHeader,proto3" json:"release_header,omitempty"`
	ResourceList  []*Resource    `protobuf:"bytes,2,rep,name=resource_list,json=resourceList,proto3" json:"resource_list,omitempty"`
	ReleaseList   []*Release     `protobuf:"bytes,3,rep,name=release_list,json=releaseList,proto3" json:"release_list,omitempty"`
}

func (x *NewReleaseMessage) Reset() {
	*x = NewReleaseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_release_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewReleaseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewReleaseMessage) ProtoMessage() {}

func (x *NewReleaseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_release_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewReleaseMessage.ProtoReflect.Descriptor instead.
func (*NewReleaseMessage) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_release_proto_rawDescGZIP(), []int{0}
}

func (x *NewReleaseMessage) GetReleaseHeader() *ReleaseHeader {
	if x != nil {
		return x.ReleaseHeader
	}
	return nil
}

func (x *NewReleaseMessage) GetResourceList() []*Resource {
	if x != nil {
		return x.ResourceList
	}
	return nil
}

func (x *NewReleaseMessage) GetReleaseList() []*Release {
	if x != nil {
		return x.ReleaseList
	}
	return nil
}

type ReleaseHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId      string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Sender         *Party `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	SentOnBehalfOf *Party `protobuf:"bytes,3,opt,name=sent_on_behalf_of,json=sentOnBehalfOf,proto3" json:"sent_on_behalf_of,omitempty"`
}

func (x *ReleaseHeader) Reset() {
	*x = ReleaseHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_release_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseHeader) ProtoMessage() {}

func (x *ReleaseHeader) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_release_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseHeader.ProtoReflect.Descriptor instead.
func (*ReleaseHeader) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_release_proto_rawDescGZIP(), []int{1}
}

func (x *ReleaseHeader) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ReleaseHeader) GetSender() *Party {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *ReleaseHeader) GetSentOnBehalfOf() *Party {
	if x != nil {
		return x.SentOnBehalfOf
	}
	return nil
}

type Party struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId string `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Party) Reset() {
	*x = Party{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_release_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Party) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Party) ProtoMessage() {}

func (x *Party) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_release_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Party.ProtoReflect.Descriptor instead.
func (*Party) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_release_proto_rawDescGZIP(), []int{2}
}

func (x *Party) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

func (x *Party) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceReference string `protobuf:"bytes,1,opt,name=resource_reference,json=resourceReference,proto3" json:"resource_reference,omitempty"`
	// Types that are assignable to Resource:
	//
	//	*Resource_SoundRecording
	//	*Resource_Image
	Resource isResource_Resource `protobuf_oneof:"resource"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_release_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_release_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_release_proto_rawDescGZIP(), []int{3}
}

func (x *Resource) GetResourceReference() string {
	if x != nil {
		return x.ResourceReference
	}
	return ""
}

func (m *Resource) GetResource() isResource_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (x *Resource) GetSoundRecording() *SoundRecording {
	if x, ok := x.GetResource().(*Resource_SoundRecording); ok {
		return x.SoundRecording
	}
	return nil
}

func (x *Resource) GetImage() *Image {
	if x, ok := x.GetResource().(*Resource_Image); ok {
		return x.Image
	}
	return nil
}

type isResource_Resource interface {
	isResource_Resource()
}

type Resource_SoundRecording struct {
	SoundRecording *SoundRecording `protobuf:"bytes,2,opt,name=sound_recording,json=soundRecording,proto3,oneof"`
}

type Resource_Image struct {
	Image *Image `protobuf:"bytes,3,opt,name=image,proto3,oneof"`
}

func (*Resource_SoundRecording) isResource_Resource() {}

func (*Resource_Image) isResource_Resource() {}

type SoundRecording struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *SoundRecordingId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filename string            `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Cid      string            `protobuf:"bytes,3,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *SoundRecording) Reset() {
	*x = SoundRecording{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_release_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoundRecording) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundRecording) ProtoMessage() {}

func (x *SoundRecording) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_release_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundRecording.ProtoReflect.Descriptor instead.
func (*SoundRecording) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_release_proto_rawDescGZIP(), []int{4}
}

func (x *SoundRecording) GetId() *SoundRecordingId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SoundRecording) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SoundRecording) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type SoundRecordingId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Isrc string `protobuf:"bytes,1,opt,name=isrc,proto3" json:"isrc,omitempty"`
}

func (x *SoundRecordingId) Reset() {
	*x = SoundRecordingId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_release_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoundRecordingId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundRecordingId) ProtoMessage() {}

func (x *SoundRecordingId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_release_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundRecordingId.ProtoReflect.Descriptor instead.
func (*SoundRecordingId) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_release_proto_rawDescGZIP(), []int{5}
}

func (x *SoundRecordingId) GetIsrc() string {
	if x != nil {
		return x.Isrc
	}
	return ""
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  *ImageId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cid string   `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_release_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_release_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_release_proto_rawDescGZIP(), []int{6}
}

func (x *Image) GetId() *ImageId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Image) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type ImageId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProprietaryId string `protobuf:"bytes,1,opt,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty"`
	Namespace     string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ImageId) Reset() {
	*x = ImageId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_release_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageId) ProtoMessage() {}

func (x *ImageId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_release_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageId.ProtoReflect.Descriptor instead.
func (*ImageId) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_release_proto_rawDescGZIP(), []int{7}
}

func (x *ImageId) GetProprietaryId() string {
	if x != nil {
		return x.ProprietaryId
	}
	return ""
}

func (x *ImageId) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type Release struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Release:
	//
	//	*Release_TrackRelease
	//	*Release_AlbumRelease
	Release isRelease_Release `protobuf_oneof:"release"`
}

func (x *Release) Reset() {
	*x = Release{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_release_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Release) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Release) ProtoMessage() {}

func (x *Release) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_release_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Release.ProtoReflect.Descriptor instead.
func (*Release) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_release_proto_rawDescGZIP(), []int{8}
}

func (m *Release) GetRelease() isRelease_Release {
	if m != nil {
		return m.Release
	}
	return nil
}

func (x *Release) GetTrackRelease() *TrackRelease {
	if x, ok := x.GetRelease().(*Release_TrackRelease); ok {
		return x.TrackRelease
	}
	return nil
}

func (x *Release) GetAlbumRelease() *AlbumRelease {
	if x, ok := x.GetRelease().(*Release_AlbumRelease); ok {
		return x.AlbumRelease
	}
	return nil
}

type isRelease_Release interface {
	isRelease_Release()
}

type Release_TrackRelease struct {
	TrackRelease *TrackRelease `protobuf:"bytes,1,opt,name=track_release,json=trackRelease,proto3,oneof"`
}

type Release_AlbumRelease struct {
	AlbumRelease *AlbumRelease `protobuf:"bytes,2,opt,name=album_release,json=albumRelease,proto3,oneof"`
}

func (*Release_TrackRelease) isRelease_Release() {}

func (*Release_AlbumRelease) isRelease_Release() {}

type TrackRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseId                      *ReleaseId `protobuf:"bytes,1,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	ReleaseResourceReference       string     `protobuf:"bytes,2,opt,name=release_resource_reference,json=releaseResourceReference,proto3" json:"release_resource_reference,omitempty"`
	LinkedReleaseResourceReference string     `protobuf:"bytes,3,opt,name=linked_release_resource_reference,json=linkedReleaseResourceReference,proto3" json:"linked_release_resource_reference,omitempty"`
	Title                          string     `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Genre                          string     `protobuf:"bytes,5,opt,name=genre,proto3" json:"genre,omitempty"`
	Artist                         string     `protobuf:"bytes,6,opt,name=artist,proto3" json:"artist,omitempty"`
}

func (x *TrackRelease) Reset() {
	*x = TrackRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_release_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackRelease) ProtoMessage() {}

func (x *TrackRelease) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_release_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackRelease.ProtoReflect.Descriptor instead.
func (*TrackRelease) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_release_proto_rawDescGZIP(), []int{9}
}

func (x *TrackRelease) GetReleaseId() *ReleaseId {
	if x != nil {
		return x.ReleaseId
	}
	return nil
}

func (x *TrackRelease) GetReleaseResourceReference() string {
	if x != nil {
		return x.ReleaseResourceReference
	}
	return ""
}

func (x *TrackRelease) GetLinkedReleaseResourceReference() string {
	if x != nil {
		return x.LinkedReleaseResourceReference
	}
	return ""
}

func (x *TrackRelease) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TrackRelease) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *TrackRelease) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

type AlbumRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseId *ReleaseId `protobuf:"bytes,1,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	Title     string     `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Genre     string     `protobuf:"bytes,3,opt,name=genre,proto3" json:"genre,omitempty"`
	Artist    string     `protobuf:"bytes,4,opt,name=artist,proto3" json:"artist,omitempty"`
}

func (x *AlbumRelease) Reset() {
	*x = AlbumRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_release_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumRelease) ProtoMessage() {}

func (x *AlbumRelease) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_release_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumRelease.ProtoReflect.Descriptor instead.
func (*AlbumRelease) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_release_proto_rawDescGZIP(), []int{10}
}

func (x *AlbumRelease) GetReleaseId() *ReleaseId {
	if x != nil {
		return x.ReleaseId
	}
	return nil
}

func (x *AlbumRelease) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AlbumRelease) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *AlbumRelease) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

type ReleaseId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Isrc            string `protobuf:"bytes,1,opt,name=isrc,proto3" json:"isrc,omitempty"`
	Icpn            string `protobuf:"bytes,2,opt,name=icpn,proto3" json:"icpn,omitempty"`
	Grid            string `protobuf:"bytes,3,opt,name=grid,proto3" json:"grid,omitempty"`
	CatalogueNumber string `protobuf:"bytes,4,opt,name=catalogue_number,json=catalogueNumber,proto3" json:"catalogue_number,omitempty"`
	Namespace       string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ReleaseId) Reset() {
	*x = ReleaseId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ddex_v1beta1_release_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseId) ProtoMessage() {}

func (x *ReleaseId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_v1beta1_release_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseId.ProtoReflect.Descriptor instead.
func (*ReleaseId) Descriptor() ([]byte, []int) {
	return file_ddex_v1beta1_release_proto_rawDescGZIP(), []int{11}
}

func (x *ReleaseId) GetIsrc() string {
	if x != nil {
		return x.Isrc
	}
	return ""
}

func (x *ReleaseId) GetIcpn() string {
	if x != nil {
		return x.Icpn
	}
	return ""
}

func (x *ReleaseId) GetGrid() string {
	if x != nil {
		return x.Grid
	}
	return ""
}

func (x *ReleaseId) GetCatalogueNumber() string {
	if x != nil {
		return x.CatalogueNumber
	}
	return ""
}

func (x *ReleaseId) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

var File_ddex_v1beta1_release_proto protoreflect.FileDescriptor

var file_ddex_v1beta1_release_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x64, 0x64, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x64, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x22, 0xce, 0x01, 0x0a, 0x11, 0x4e,
	0x65, 0x77, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x42, 0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x38, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x0d,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x11, 0x73, 0x65, 0x6e,
	0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x6f, 0x66, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x42, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x4f, 0x66, 0x22, 0x3c, 0x0a, 0x05, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xbb, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x6f,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x6e, 0x0a, 0x0e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x10, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x72,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x73, 0x72, 0x63, 0x22, 0x40, 0x0a,
	0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22,
	0x4e, 0x0a, 0x07, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72,
	0x6f, 0x70, 0x72, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x72, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22,
	0x9a, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x0d, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x22, 0x93, 0x02, 0x0a,
	0x0c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x1a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x21, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e,
	0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x0c, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64,
	0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x22,
	0x90, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x73, 0x72,
	0x63, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x70, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x70, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x72, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x41, 0x75, 0x64, 0x69, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x61,
	0x75, 0x64, 0x69, 0x75, 0x73, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64,
	0x64, 0x65, 0x78, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ddex_v1beta1_release_proto_rawDescOnce sync.Once
	file_ddex_v1beta1_release_proto_rawDescData = file_ddex_v1beta1_release_proto_rawDesc
)

func file_ddex_v1beta1_release_proto_rawDescGZIP() []byte {
	file_ddex_v1beta1_release_proto_rawDescOnce.Do(func() {
		file_ddex_v1beta1_release_proto_rawDescData = protoimpl.X.CompressGZIP(file_ddex_v1beta1_release_proto_rawDescData)
	})
	return file_ddex_v1beta1_release_proto_rawDescData
}

var file_ddex_v1beta1_release_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_ddex_v1beta1_release_proto_goTypes = []interface{}{
	(*NewReleaseMessage)(nil), // 0: ddex.v1beta1.NewReleaseMessage
	(*ReleaseHeader)(nil),     // 1: ddex.v1beta1.ReleaseHeader
	(*Party)(nil),             // 2: ddex.v1beta1.Party
	(*Resource)(nil),          // 3: ddex.v1beta1.Resource
	(*SoundRecording)(nil),    // 4: ddex.v1beta1.SoundRecording
	(*SoundRecordingId)(nil),  // 5: ddex.v1beta1.SoundRecordingId
	(*Image)(nil),             // 6: ddex.v1beta1.Image
	(*ImageId)(nil),           // 7: ddex.v1beta1.ImageId
	(*Release)(nil),           // 8: ddex.v1beta1.Release
	(*TrackRelease)(nil),      // 9: ddex.v1beta1.TrackRelease
	(*AlbumRelease)(nil),      // 10: ddex.v1beta1.AlbumRelease
	(*ReleaseId)(nil),         // 11: ddex.v1beta1.ReleaseId
}
var file_ddex_v1beta1_release_proto_depIdxs = []int32{
	1,  // 0: ddex.v1beta1.NewReleaseMessage.release_header:type_name -> ddex.v1beta1.ReleaseHeader
	3,  // 1: ddex.v1beta1.NewReleaseMessage.resource_list:type_name -> ddex.v1beta1.Resource
	8,  // 2: ddex.v1beta1.NewReleaseMessage.release_list:type_name -> ddex.v1beta1.Release
	2,  // 3: ddex.v1beta1.ReleaseHeader.sender:type_name -> ddex.v1beta1.Party
	2,  // 4: ddex.v1beta1.ReleaseHeader.sent_on_behalf_of:type_name -> ddex.v1beta1.Party
	4,  // 5: ddex.v1beta1.Resource.sound_recording:type_name -> ddex.v1beta1.SoundRecording
	6,  // 6: ddex.v1beta1.Resource.image:type_name -> ddex.v1beta1.Image
	5,  // 7: ddex.v1beta1.SoundRecording.id:type_name -> ddex.v1beta1.SoundRecordingId
	7,  // 8: ddex.v1beta1.Image.id:type_name -> ddex.v1beta1.ImageId
	9,  // 9: ddex.v1beta1.Release.track_release:type_name -> ddex.v1beta1.TrackRelease
	10, // 10: ddex.v1beta1.Release.album_release:type_name -> ddex.v1beta1.AlbumRelease
	11, // 11: ddex.v1beta1.TrackRelease.release_id:type_name -> ddex.v1beta1.ReleaseId
	11, // 12: ddex.v1beta1.AlbumRelease.release_id:type_name -> ddex.v1beta1.ReleaseId
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_ddex_v1beta1_release_proto_init() }
func file_ddex_v1beta1_release_proto_init() {
	if File_ddex_v1beta1_release_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ddex_v1beta1_release_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewReleaseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_release_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_release_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Party); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_release_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_release_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoundRecording); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_release_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoundRecordingId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_release_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_release_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_release_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Release); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_release_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_release_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ddex_v1beta1_release_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ddex_v1beta1_release_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Resource_SoundRecording)(nil),
		(*Resource_Image)(nil),
	}
	file_ddex_v1beta1_release_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*Release_TrackRelease)(nil),
		(*Release_AlbumRelease)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ddex_v1beta1_release_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ddex_v1beta1_release_proto_goTypes,
		DependencyIndexes: file_ddex_v1beta1_release_proto_depIdxs,
		MessageInfos:      file_ddex_v1beta1_release_proto_msgTypes,
	}.Build()
	File_ddex_v1beta1_release_proto = out.File
	file_ddex_v1beta1_release_proto_rawDesc = nil
	file_ddex_v1beta1_release_proto_goTypes = nil
	file_ddex_v1beta1_release_proto_depIdxs = nil
}
