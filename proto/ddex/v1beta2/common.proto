syntax = "proto3";

package ddex.v1beta2;

option go_package = "github.com/AudiusProject/audiusd/pkg/api/ddex/v1beta2";

// Message control types for DDEX messages
enum DDEXMessageControlType {
  DDEX_MESSAGE_CONTROL_TYPE_UNSPECIFIED = 0;
  DDEX_MESSAGE_CONTROL_TYPE_NEW_MESSAGE = 1;
  DDEX_MESSAGE_CONTROL_TYPE_UPDATED_MESSAGE = 2;
  DDEX_MESSAGE_CONTROL_TYPE_TAKEDOWN_MESSAGE = 3;
}

message DDEXMessageHeader {
  DDEXMessageControlType control_type = 1;
  // address of the party sending the message, must match the recovered address from the signature
  string from = 2;
  // address of the party receiving the message, must be empty for new release messages
  string to = 3;
  // nonce of the message. Used for replay protection, ordering, and race conditions
  uint64 nonce = 4;
}
