syntax = "proto3";

package core.v1beta1;

import "ddex/v1beta2/ern.proto";
import "ddex/v1beta2/mead.proto";
import "ddex/v1beta2/pie.proto";

option go_package = "github.com/AudiusProject/audiusd/pkg/api/core/v1beta1";

// CometBFT Transaction
message Transaction {
  bytes signature = 1; // EIP-712 signature
  Envelope envelope = 2; // DDEX-style batch of messages
}

// DDEX Envelope
message Envelope {
  EnvelopeHeader header = 1;
  repeated Message messages = 2;
}

message EnvelopeHeader {
  string chain_id = 1;
  int64 expiration = 2;
  string nonce = 3;
}

// DDEX-style messages (oneof schema)
message Message {
  oneof message {
    ddex.v1beta2.ElectronicReleaseNotification ern = 1;
    ddex.v1beta2.MediaEnrichmentDescription mead = 2;
    ddex.v1beta2.PartyIdentificationEnrichment pie = 3;
    // DigitalSalesReport dsr = 4;
    // ContentDistributionMessage cdm = 5;
  }
}

message TransactionReceipt {
  // Basic transaction identification
  string tx_hash = 1;
  int64 height = 2;
  int64 timestamp = 3;

  // Transaction parties
  string sender = 4; // Who signed the transaction
  string responder = 5; // Node that responded to the request
  string proposer = 6; // Node that proposed the block that included the transaction

  // Envelope information from the transaction
  EnvelopeReceiptInfo envelope_info = 7;

  // Results from message processing (addresses, IDs, etc.)
  repeated MessageReceipt message_receipts = 8;
}

message MessageReceipt {
  int32 message_index = 1;
  oneof result {
    ddex.v1beta2.ElectronicReleaseNotificationAck ern_ack = 2;
    ddex.v1beta2.MediaEnrichmentDescriptionAck mead_ack = 3;
    ddex.v1beta2.PartyIdentificationEnrichmentAck pie_ack = 4;
    // DsrResult dsr_result = 5;
    // CdmResult cdm_result = 6;
  }
}

message EnvelopeReceiptInfo {
  string chain_id = 1;
  int64 expiration = 2;
  string nonce = 3;
  int32 message_count = 4;
}
