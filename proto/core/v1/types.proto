syntax = "proto3";

package core.v1;

import "ddex/v1beta1/release.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/AudiusProject/audiusd/pkg/api/core/v1";

message PingRequest {}

message PingResponse {
  string message = 1;
}

message GetHealthRequest {}

message GetHealthResponse {
  bool is_ready = 1;
}

message GetNodeInfoRequest {}

message GetNodeInfoResponse {
  string chainid = 1;
  bool synced = 2;
  string comet_address = 3;
  string eth_address = 4;
  int64 current_height = 5;
}

message GetBlockRequest {
  int64 height = 1;
}

message GetBlockResponse {
  Block block = 1;
  int64 current_height = 2;
}

message GetTransactionRequest {
  string tx_hash = 1;
}

message GetTransactionResponse {
  Transaction transaction = 2;
}

message SendTransactionRequest {
  SignedTransaction transaction = 1;
}

message SendTransactionResponse {
  Transaction transaction = 1;
}

message ForwardTransactionRequest {
  SignedTransaction transaction = 1;
}

message ForwardTransactionResponse {}

message GetRegistrationAttestationRequest {
  ValidatorRegistration registration = 1;
}

message GetRegistrationAttestationResponse {
  string signature = 1;
  ValidatorRegistration registration = 2;
}

message GetDeregistrationAttestationRequest {
  ValidatorDeregistration deregistration = 1;
}

message GetDeregistrationAttestationResponse {
  string signature = 1;
  ValidatorDeregistration deregistration = 2;
}

message Block {
  int64 height = 1;
  string hash = 2;
  string chain_id = 3;
  string proposer = 4;
  google.protobuf.Timestamp timestamp = 5;
  repeated Transaction transactions = 6;
}

message Transaction {
  string hash = 1;
  SignedTransaction transaction = 2;
  string chain_id = 3;
  int64 height = 4;
  string block_hash = 5;
  google.protobuf.Timestamp timestamp = 6;
}

message SignedTransaction {
  string signature = 1;
  string request_id = 2;
  oneof transaction {
    TrackPlays plays = 1000;
    ValidatorRegistrationLegacy validator_registration = 1001;
    SlaRollup sla_rollup = 1002;
    ManageEntityLegacy manage_entity = 1003;
    ValidatorMisbehaviorDeregistration validator_deregistration = 1004;
    StorageProof storage_proof = 1005;
    StorageProofVerification storage_proof_verification = 1006;
    Attestation attestation = 1007;
    ddex.v1beta1.NewReleaseMessage release = 1008;
  }
}

message TrackPlays {
  repeated TrackPlay plays = 1;
}

message ValidatorRegistrationLegacy {
  string endpoint = 1;
  string comet_address = 2;
  string eth_block = 3;
  string node_type = 4;
  string sp_id = 5;
  bytes pub_key = 6;
  int64 power = 7;
}

message TrackPlay {
  string user_id = 1;
  string track_id = 2;
  google.protobuf.Timestamp timestamp = 3;
  string signature = 4;
  string city = 5;
  string region = 6;
  string country = 7;
}

message SlaRollup {
  google.protobuf.Timestamp timestamp = 1;
  int64 block_start = 2;
  int64 block_end = 3;
  repeated SlaNodeReport reports = 4;
}

message SlaNodeReport {
  string address = 1;
  int32 num_blocks_proposed = 2;
}

message ManageEntityLegacy {
  int64 user_id = 1;
  string entity_type = 2;
  int64 entity_id = 3;
  string action = 4;
  string metadata = 5;
  string signature = 6;
  string signer = 7;
  string nonce = 8;
}

message ValidatorMisbehaviorDeregistration {
  string comet_address = 1;
  bytes pub_key = 2;
}

message StorageProof {
  int64 height = 1;
  string address = 2;
  repeated string prover_addresses = 3;
  string cid = 4;
  bytes proof_signature = 5;
}

message StorageProofVerification {
  int64 height = 1;
  bytes proof = 2;
}

message Attestation {
  repeated string signatures = 1;
  oneof body {
    ValidatorRegistration validator_registration = 1000;
    ValidatorDeregistration validator_deregistration = 1001;
  }
}

message ValidatorRegistration {
  string delegate_wallet = 1;
  string endpoint = 2;
  string node_type = 3;
  string sp_id = 4;
  int64 eth_block = 5;
  string comet_address = 6;
  bytes pub_key = 7;
  int64 power = 8;
  int64 deadline = 9;
}

message ValidatorDeregistration {
  string comet_address = 1;
  bytes pub_key = 2;
  int64 deadline = 3;
}
