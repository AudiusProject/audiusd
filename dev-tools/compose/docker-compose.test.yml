# Do not expose any ports in this file to allow running multiple tests and e2e dev at the same time

x-logging: &default-logging
  options:
    max-size: '50m'
    max-file: '3'
  driver: json-file

services:
  ingress:
    image: openresty/openresty:1.21.4.1-alpine-fat
    logging: *default-logging
    volumes:
      - ./dev-tools/compose/nginx_ingress_test.conf:/etc/nginx/conf.d/default.conf
    extra_hosts:
      - 'audius-protocol-creator-node-1:host-gateway'
      - 'audius-protocol-creator-node-2:host-gateway'
      - 'audius-protocol-creator-node-3:host-gateway'
      - 'audius-protocol-discovery-provider-1:host-gateway'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/" ]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - 80:80
    profiles:
      - mediorum
      - core-tests

  db:
    image: postgres
    restart: unless-stopped
    ports:
      - 5455:5432
    environment:
      PGUSER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
    volumes:
      - ./dev-tools/startup/initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ 'CMD', 'pg_isready' ]
      interval: 10s
      timeout: 5s
    deploy:
      mode: global
      resources:
        limits:
          memory: 3G

  eth-ganache:
    image: audius/eth-ganache:latest
    command: bash /tmp/dev-tools/startup/eth-ganache.sh
    volumes:
      - eth-contracts-abis:/usr/src/app/build/contracts
      - ./dev-tools:/tmp/dev-tools
    logging: *default-logging
    deploy:
      mode: global
    profiles:
      - mediorum
      - core-tests

  audiusd-1:
    image: audius/audiusd:${CIRCLE_SHA1}-amd64
    env_file:
      - ./cmd/core/infra/dev_config/discovery-one.docker.env
    restart: unless-stopped
    healthcheck:
      test: [ 'CMD', 'curl', 'http://localhost:26659/console/health_check' ]
      interval: 10s
      start_period: 60s
      timeout: 5s
    profiles:
      - mediorum
      - core-tests
    depends_on:
      db:
        condition: service_healthy

  audiusd-2:
    image: audius/audiusd:${CIRCLE_SHA1}-amd64
    env_file:
      - ./cmd/core/infra/dev_config/content-one.docker.env
    restart: unless-stopped
    healthcheck:
      test: [ 'CMD', 'curl', 'http://localhost:1991/health_check' ]
      interval: 10s
      start_period: 60s
      timeout: 5s
    profiles:
      - mediorum
      - core-tests
    depends_on:
      db:
        condition: service_healthy

  audiusd-3:
    image: audius/audiusd:${CIRCLE_SHA1}-amd64
    env_file:
      - ./cmd/core/infra/dev_config/content-two.docker.env
    restart: unless-stopped
    healthcheck:
      test: [ 'CMD', 'curl', 'http://localhost:1991/health_check' ]
      interval: 10s
      start_period: 60s
      timeout: 5s
    profiles:
      - mediorum
      - core-tests
    depends_on:
      db:
        condition: service_healthy

  audiusd-4:
    image: audius/audiusd:${CIRCLE_SHA1}-amd64
    env_file:
      - ./cmd/core/infra/dev_config/content-three.docker.env
    restart: unless-stopped
    healthcheck:
      test: [ 'CMD', 'curl', 'http://localhost:1991/health_check' ]
      interval: 10s
      start_period: 60s
      timeout: 5s
    profiles:
      - mediorum
      - core-tests
    depends_on:
      db:
        condition: service_healthy

  test-core:
    image: audius/test-core:${CIRCLE_SHA1}
    logging: *default-logging
    profiles:
      - core-tests
    depends_on:
      ingress:
        condition: service_healthy
      audiusd-1:
        condition: service_started
      audiusd-2:
        condition: service_started
      audiusd-3:
        condition: service_started
      audiusd-4:
        condition: service_started
      eth-ganache:
        condition: service_healthy

  mediorum-db:
    image: postgres:11.4
    shm_size: 5g
    command: postgres -c shared_buffers=5GB
    environment:
      POSTGRES_PASSWORD: example
    healthcheck:
      test: [ 'CMD', 'pg_isready' ]
      interval: 3s
      timeout: 3s
    logging: *default-logging
    volumes:
      - ./cmd/mediorum/.initdb:/docker-entrypoint-initdb.d
    profiles:
      - mediorum
      - mediorum-unittests

  test-mediorum-unittests:
    image: audius/test-mediorum:${CIRCLE_SHA1}
    logging: *default-logging
    environment:
      dbUrlTemplate: 'postgres://postgres:example@mediorum-db:5432/m%d'
      dbUrl: 'postgres://postgres:example@mediorum-db:5432/mediorum_test'
    profiles:
      - mediorum-unittests
    depends_on:
      mediorum-db:
        condition: service_healthy

volumes:
  postgresdata:
  mediorum:
  legacy_creator_file_storage:
  eth-contracts-abis:
